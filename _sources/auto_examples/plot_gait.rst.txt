
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_gait.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_gait.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_gait.py:


Gait (steps) example
====================

In this example, we use DiCoDiLe on an open `dataset`_ of gait (steps)
IMU time-series to discover patterns in the data.
We will then use those to attempt to detect steps and compare our findings
with the ground truth.

.. _dataset: https://github.com/deepcharles/gait-data

.. GENERATED FROM PYTHON SOURCE LINES 12-22

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from dicodile.data.gait import get_gait_data
    from dicodile.utils.dictionary import init_dictionary
    from dicodile.utils.viz import display_dictionaries
    from dicodile.utils.csc import reconstruct
    from dicodile import dicodile








.. GENERATED FROM PYTHON SOURCE LINES 23-25

Retrieve trial data
-------------------

.. GENERATED FROM PYTHON SOURCE LINES 25-28

.. code-block:: default


    trial = get_gait_data(subject=6, trial=1)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Downloading data from http://dev.ipol.im/~truong/GaitData.zip (192.3 MB)

    file_sizes:   0%|                                    | 0.00/202M [00:00<?, ?B/s]    file_sizes:   0%|                            | 24.6k/202M [00:00<21:31, 156kB/s]    file_sizes:   0%|                            | 49.2k/202M [00:00<21:34, 156kB/s]    file_sizes:   0%|                             | 106k/202M [00:00<13:24, 251kB/s]    file_sizes:   0%|                             | 221k/202M [00:00<07:39, 439kB/s]    file_sizes:   0%|                             | 270k/202M [00:00<08:33, 392kB/s]    file_sizes:   0%|1                           | 762k/202M [00:00<02:34, 1.30MB/s]    file_sizes:   0%|1                           | 893k/202M [00:01<02:53, 1.16MB/s]    file_sizes:   1%|1                          | 1.06M/202M [00:01<02:59, 1.12MB/s]    file_sizes:   1%|1                          | 1.19M/202M [00:01<03:14, 1.03MB/s]    file_sizes:   1%|1                          | 1.38M/202M [00:01<03:02, 1.10MB/s]    file_sizes:   1%|2                          | 1.58M/202M [00:01<02:55, 1.14MB/s]    file_sizes:   1%|2                          | 1.78M/202M [00:01<02:50, 1.17MB/s]    file_sizes:   1%|2                          | 1.97M/202M [00:02<02:46, 1.20MB/s]    file_sizes:   1%|2                          | 2.17M/202M [00:02<02:44, 1.21MB/s]    file_sizes:   1%|3                          | 2.50M/202M [00:02<02:16, 1.46MB/s]    file_sizes:   1%|3                          | 2.70M/202M [00:02<02:22, 1.40MB/s]    file_sizes:   1%|3                          | 2.89M/202M [00:02<02:26, 1.36MB/s]    file_sizes:   2%|4                          | 3.09M/202M [00:02<02:29, 1.33MB/s]    file_sizes:   2%|4                          | 3.28M/202M [00:02<02:32, 1.30MB/s]    file_sizes:   2%|4                          | 3.61M/202M [00:03<02:09, 1.53MB/s]    file_sizes:   2%|5                          | 3.81M/202M [00:03<02:16, 1.45MB/s]    file_sizes:   2%|5                          | 4.01M/202M [00:03<02:22, 1.39MB/s]    file_sizes:   2%|5                          | 4.20M/202M [00:03<02:26, 1.35MB/s]    file_sizes:   2%|6                          | 4.53M/202M [00:03<02:06, 1.56MB/s]    file_sizes:   2%|6                          | 4.73M/202M [00:03<02:14, 1.47MB/s]    file_sizes:   2%|6                          | 4.96M/202M [00:04<02:14, 1.47MB/s]    file_sizes:   3%|6                          | 5.15M/202M [00:04<02:20, 1.40MB/s]    file_sizes:   3%|7                          | 5.48M/202M [00:04<02:02, 1.60MB/s]    file_sizes:   3%|7                          | 5.68M/202M [00:04<02:11, 1.50MB/s]    file_sizes:   3%|8                          | 6.00M/202M [00:04<01:57, 1.66MB/s]    file_sizes:   3%|8                          | 6.23M/202M [00:04<02:02, 1.60MB/s]    file_sizes:   3%|8                          | 6.43M/202M [00:05<02:10, 1.50MB/s]    file_sizes:   3%|8                          | 6.69M/202M [00:05<02:06, 1.55MB/s]    file_sizes:   3%|9                          | 6.89M/202M [00:05<02:13, 1.46MB/s]    file_sizes:   4%|9                          | 7.22M/202M [00:05<01:58, 1.64MB/s]    file_sizes:   4%|9                          | 7.41M/202M [00:05<02:07, 1.52MB/s]    file_sizes:   4%|#                          | 7.68M/202M [00:05<02:04, 1.56MB/s]    file_sizes:   4%|#                          | 7.87M/202M [00:06<02:11, 1.47MB/s]    file_sizes:   4%|#                          | 8.10M/202M [00:06<02:12, 1.47MB/s]    file_sizes:   4%|#1                         | 8.43M/202M [00:06<01:57, 1.64MB/s]    file_sizes:   4%|#1                         | 8.63M/202M [00:06<02:06, 1.53MB/s]    file_sizes:   4%|#1                         | 8.89M/202M [00:06<02:03, 1.56MB/s]    file_sizes:   5%|#2                         | 9.08M/202M [00:06<02:10, 1.47MB/s]    file_sizes:   5%|#2                         | 9.31M/202M [00:06<02:11, 1.47MB/s]    file_sizes:   5%|#2                         | 9.54M/202M [00:07<02:11, 1.46MB/s]    file_sizes:   5%|#3                         | 9.87M/202M [00:07<01:56, 1.64MB/s]    file_sizes:   5%|#3                         | 10.0M/202M [00:07<02:10, 1.47MB/s]    file_sizes:   5%|#3                         | 10.4M/202M [00:07<01:56, 1.64MB/s]    file_sizes:   5%|#4                         | 10.5M/202M [00:07<02:10, 1.47MB/s]    file_sizes:   5%|#4                         | 10.9M/202M [00:07<01:56, 1.64MB/s]    file_sizes:   5%|#4                         | 11.0M/202M [00:08<02:09, 1.47MB/s]    file_sizes:   6%|#5                         | 11.3M/202M [00:08<01:55, 1.64MB/s]    file_sizes:   6%|#5                         | 11.5M/202M [00:08<02:04, 1.53MB/s]    file_sizes:   6%|#5                         | 11.7M/202M [00:08<02:11, 1.45MB/s]    file_sizes:   6%|#6                         | 12.1M/202M [00:08<02:30, 1.26MB/s]    file_sizes:   6%|#6                         | 12.5M/202M [00:09<01:55, 1.64MB/s]    file_sizes:   6%|#7                         | 12.7M/202M [00:09<02:18, 1.36MB/s]    file_sizes:   6%|#7                         | 12.9M/202M [00:09<02:21, 1.33MB/s]    file_sizes:   7%|#7                         | 13.2M/202M [00:09<02:28, 1.27MB/s]    file_sizes:   7%|#7                         | 13.4M/202M [00:09<02:28, 1.27MB/s]    file_sizes:   7%|#8                          | 13.6M/202M [00:10<03:08, 997kB/s]    file_sizes:   7%|#8                         | 14.0M/202M [00:10<02:27, 1.27MB/s]    file_sizes:   7%|#9                         | 14.3M/202M [00:10<02:32, 1.23MB/s]    file_sizes:   7%|#9                         | 14.4M/202M [00:10<02:43, 1.14MB/s]    file_sizes:   7%|#9                         | 14.6M/202M [00:10<02:54, 1.07MB/s]    file_sizes:   7%|#9                         | 14.7M/202M [00:11<02:55, 1.07MB/s]    file_sizes:   7%|#9                         | 14.9M/202M [00:11<02:56, 1.06MB/s]    file_sizes:   7%|##                         | 15.0M/202M [00:11<02:49, 1.10MB/s]    file_sizes:   8%|##                         | 15.2M/202M [00:11<02:51, 1.09MB/s]    file_sizes:   8%|##                         | 15.4M/202M [00:11<02:53, 1.07MB/s]    file_sizes:   8%|##                         | 15.6M/202M [00:11<02:39, 1.17MB/s]    file_sizes:   8%|##1                        | 15.8M/202M [00:12<02:51, 1.08MB/s]    file_sizes:   8%|##1                        | 15.9M/202M [00:12<02:44, 1.13MB/s]    file_sizes:   8%|##1                        | 16.1M/202M [00:12<02:35, 1.19MB/s]    file_sizes:   8%|##1                        | 16.3M/202M [00:12<02:45, 1.12MB/s]    file_sizes:   8%|##2                        | 16.5M/202M [00:12<02:36, 1.19MB/s]    file_sizes:   8%|##2                        | 16.7M/202M [00:12<02:38, 1.17MB/s]    file_sizes:   8%|##2                        | 16.9M/202M [00:12<02:36, 1.18MB/s]    file_sizes:   8%|##2                        | 17.0M/202M [00:13<02:48, 1.10MB/s]    file_sizes:   9%|##3                        | 17.2M/202M [00:13<02:42, 1.14MB/s]    file_sizes:   9%|##3                        | 17.4M/202M [00:13<02:33, 1.20MB/s]    file_sizes:   9%|##3                        | 17.6M/202M [00:13<02:36, 1.18MB/s]    file_sizes:   9%|##3                        | 17.8M/202M [00:13<02:34, 1.19MB/s]    file_sizes:   9%|##4                        | 18.0M/202M [00:13<02:47, 1.10MB/s]    file_sizes:   9%|##4                        | 18.2M/202M [00:14<02:33, 1.19MB/s]    file_sizes:   9%|##4                        | 18.4M/202M [00:14<02:32, 1.20MB/s]    file_sizes:   9%|##4                        | 18.5M/202M [00:14<02:45, 1.11MB/s]    file_sizes:   9%|##4                        | 18.7M/202M [00:14<03:01, 1.01MB/s]    file_sizes:   9%|##5                        | 18.8M/202M [00:14<02:48, 1.09MB/s]    file_sizes:   9%|##5                        | 19.0M/202M [00:14<02:42, 1.12MB/s]    file_sizes:  10%|##6                         | 19.2M/202M [00:15<03:11, 954kB/s]    file_sizes:  10%|##6                         | 19.3M/202M [00:15<03:03, 993kB/s]    file_sizes:  10%|##7                         | 19.5M/202M [00:15<03:15, 932kB/s]    file_sizes:  10%|##7                         | 19.8M/202M [00:15<03:02, 999kB/s]    file_sizes:  10%|##7                         | 19.9M/202M [00:15<03:09, 958kB/s]    file_sizes:  10%|##7                         | 20.0M/202M [00:15<03:15, 931kB/s]    file_sizes:  10%|##8                         | 20.2M/202M [00:16<03:08, 960kB/s]    file_sizes:  10%|##7                        | 20.4M/202M [00:16<02:46, 1.09MB/s]    file_sizes:  10%|##7                        | 20.6M/202M [00:16<02:58, 1.02MB/s]    file_sizes:  10%|##7                        | 20.8M/202M [00:16<02:47, 1.08MB/s]    file_sizes:  10%|##7                        | 20.9M/202M [00:16<02:57, 1.02MB/s]    file_sizes:  10%|##8                        | 21.1M/202M [00:16<02:38, 1.14MB/s]    file_sizes:  11%|##8                        | 21.2M/202M [00:17<02:52, 1.05MB/s]    file_sizes:  11%|##8                        | 21.4M/202M [00:17<02:43, 1.10MB/s]    file_sizes:  11%|##8                        | 21.6M/202M [00:17<02:37, 1.15MB/s]    file_sizes:  11%|##9                        | 21.8M/202M [00:17<02:49, 1.06MB/s]    file_sizes:  11%|##9                        | 22.0M/202M [00:17<02:33, 1.17MB/s]    file_sizes:  11%|##9                        | 22.1M/202M [00:17<02:36, 1.15MB/s]    file_sizes:  11%|##9                        | 22.3M/202M [00:17<02:37, 1.14MB/s]    file_sizes:  11%|###                        | 22.5M/202M [00:18<02:32, 1.17MB/s]    file_sizes:  11%|###                        | 22.7M/202M [00:18<02:35, 1.15MB/s]    file_sizes:  11%|###                        | 22.9M/202M [00:18<02:31, 1.18MB/s]    file_sizes:  11%|###                        | 23.0M/202M [00:18<02:35, 1.15MB/s]    file_sizes:  11%|###1                       | 23.2M/202M [00:18<02:35, 1.15MB/s]    file_sizes:  12%|###1                       | 23.3M/202M [00:18<02:41, 1.10MB/s]    file_sizes:  12%|###1                       | 23.5M/202M [00:18<02:39, 1.12MB/s]    file_sizes:  12%|###1                       | 23.6M/202M [00:19<02:54, 1.02MB/s]    file_sizes:  12%|###2                        | 23.8M/202M [00:19<03:08, 943kB/s]    file_sizes:  12%|###3                        | 23.9M/202M [00:19<03:15, 910kB/s]    file_sizes:  12%|###3                        | 24.0M/202M [00:19<03:20, 887kB/s]    file_sizes:  12%|###3                        | 24.2M/202M [00:19<03:07, 946kB/s]    file_sizes:  12%|###3                        | 24.3M/202M [00:19<03:00, 983kB/s]    file_sizes:  12%|###3                        | 24.4M/202M [00:20<03:09, 935kB/s]    file_sizes:  12%|###4                        | 24.6M/202M [00:20<03:16, 902kB/s]    file_sizes:  12%|###4                        | 24.7M/202M [00:20<03:07, 944kB/s]    file_sizes:  12%|###4                        | 24.8M/202M [00:20<02:58, 991kB/s]    file_sizes:  12%|###3                       | 24.9M/202M [00:20<02:51, 1.03MB/s]    file_sizes:  12%|###3                       | 25.1M/202M [00:20<02:48, 1.05MB/s]    file_sizes:  13%|###5                        | 25.2M/202M [00:20<02:58, 987kB/s]    file_sizes:  13%|###4                       | 25.4M/202M [00:21<02:46, 1.06MB/s]    file_sizes:  13%|###4                       | 25.5M/202M [00:21<02:45, 1.06MB/s]    file_sizes:  13%|###4                       | 25.7M/202M [00:21<02:43, 1.08MB/s]    file_sizes:  13%|###4                       | 25.8M/202M [00:21<02:40, 1.09MB/s]    file_sizes:  13%|###4                       | 25.9M/202M [00:21<02:40, 1.10MB/s]    file_sizes:  13%|###4                       | 26.1M/202M [00:21<02:41, 1.09MB/s]    file_sizes:  13%|###5                       | 26.2M/202M [00:21<02:40, 1.10MB/s]    file_sizes:  13%|###5                       | 26.4M/202M [00:21<02:32, 1.15MB/s]    file_sizes:  13%|###5                       | 26.5M/202M [00:22<02:33, 1.14MB/s]    file_sizes:  13%|###5                       | 26.6M/202M [00:22<02:34, 1.13MB/s]    file_sizes:  13%|###5                       | 26.8M/202M [00:22<02:37, 1.11MB/s]    file_sizes:  13%|###6                       | 26.9M/202M [00:22<02:36, 1.12MB/s]    file_sizes:  13%|###6                       | 27.1M/202M [00:22<02:30, 1.16MB/s]    file_sizes:  14%|###6                       | 27.3M/202M [00:22<02:26, 1.19MB/s]    file_sizes:  14%|###6                       | 27.4M/202M [00:22<02:28, 1.17MB/s]    file_sizes:  14%|###6                       | 27.6M/202M [00:22<02:30, 1.15MB/s]    file_sizes:  14%|###7                       | 27.7M/202M [00:23<02:34, 1.13MB/s]    file_sizes:  14%|###7                       | 27.9M/202M [00:23<02:28, 1.17MB/s]    file_sizes:  14%|###7                       | 28.0M/202M [00:23<02:29, 1.16MB/s]    file_sizes:  14%|###7                       | 28.2M/202M [00:23<02:26, 1.19MB/s]    file_sizes:  14%|###7                       | 28.4M/202M [00:23<02:28, 1.17MB/s]    file_sizes:  14%|###8                       | 28.5M/202M [00:23<02:29, 1.15MB/s]    file_sizes:  14%|###8                       | 28.6M/202M [00:23<02:33, 1.13MB/s]    file_sizes:  14%|###8                       | 28.7M/202M [00:23<02:32, 1.13MB/s]    file_sizes:  14%|###8                       | 28.9M/202M [00:24<02:27, 1.17MB/s]    file_sizes:  14%|###9                       | 29.1M/202M [00:24<02:24, 1.19MB/s]    file_sizes:  15%|###9                       | 29.3M/202M [00:24<02:26, 1.17MB/s]    file_sizes:  15%|###9                       | 29.4M/202M [00:24<02:28, 1.16MB/s]    file_sizes:  15%|###9                       | 29.5M/202M [00:24<02:31, 1.13MB/s]    file_sizes:  15%|###9                       | 29.7M/202M [00:24<02:31, 1.13MB/s]    file_sizes:  15%|###9                       | 29.9M/202M [00:24<02:26, 1.17MB/s]    file_sizes:  15%|####                       | 30.1M/202M [00:25<02:23, 1.20MB/s]    file_sizes:  15%|####                       | 30.2M/202M [00:25<02:26, 1.17MB/s]    file_sizes:  15%|####                       | 30.3M/202M [00:25<02:27, 1.16MB/s]    file_sizes:  15%|####                       | 30.5M/202M [00:25<02:24, 1.19MB/s]    file_sizes:  15%|####1                      | 30.6M/202M [00:25<02:28, 1.16MB/s]    file_sizes:  15%|####1                      | 30.8M/202M [00:25<02:28, 1.15MB/s]    file_sizes:  15%|####1                      | 31.0M/202M [00:25<02:24, 1.18MB/s]    file_sizes:  15%|####1                      | 31.2M/202M [00:25<02:21, 1.20MB/s]    file_sizes:  16%|####1                      | 31.4M/202M [00:26<02:20, 1.22MB/s]    file_sizes:  16%|####2                      | 31.6M/202M [00:26<02:19, 1.22MB/s]    file_sizes:  16%|####2                      | 31.8M/202M [00:26<02:18, 1.23MB/s]    file_sizes:  16%|####2                      | 32.0M/202M [00:26<02:21, 1.20MB/s]    file_sizes:  16%|####3                      | 32.2M/202M [00:26<02:19, 1.21MB/s]    file_sizes:  16%|####3                      | 32.4M/202M [00:27<02:18, 1.22MB/s]    file_sizes:  16%|####3                      | 32.6M/202M [00:27<02:17, 1.23MB/s]    file_sizes:  16%|####3                      | 32.8M/202M [00:27<02:10, 1.30MB/s]    file_sizes:  16%|####4                      | 32.9M/202M [00:27<02:13, 1.26MB/s]    file_sizes:  16%|####4                      | 33.1M/202M [00:27<02:03, 1.37MB/s]    file_sizes:  17%|####4                      | 33.3M/202M [00:27<01:56, 1.44MB/s]    file_sizes:  17%|####4                      | 33.5M/202M [00:27<02:02, 1.38MB/s]    file_sizes:  17%|####5                      | 33.7M/202M [00:27<02:05, 1.34MB/s]    file_sizes:  17%|####5                      | 33.9M/202M [00:28<02:06, 1.33MB/s]    file_sizes:  17%|####5                      | 34.3M/202M [00:28<01:49, 1.53MB/s]    file_sizes:  17%|####6                      | 34.4M/202M [00:28<01:55, 1.45MB/s]    file_sizes:  17%|####6                      | 34.6M/202M [00:28<01:58, 1.41MB/s]    file_sizes:  17%|####6                      | 35.0M/202M [00:28<01:45, 1.59MB/s]    file_sizes:  17%|####7                      | 35.2M/202M [00:28<01:43, 1.61MB/s]    file_sizes:  18%|####7                      | 35.5M/202M [00:29<01:42, 1.62MB/s]    file_sizes:  18%|####7                      | 35.8M/202M [00:29<01:41, 1.64MB/s]    file_sizes:  18%|####8                      | 36.0M/202M [00:29<01:40, 1.64MB/s]    file_sizes:  18%|####8                      | 36.3M/202M [00:29<01:40, 1.65MB/s]    file_sizes:  18%|####8                      | 36.5M/202M [00:29<01:33, 1.77MB/s]    file_sizes:  18%|####9                      | 36.8M/202M [00:29<01:28, 1.86MB/s]    file_sizes:  18%|####9                      | 37.1M/202M [00:29<01:31, 1.80MB/s]    file_sizes:  19%|####9                      | 37.3M/202M [00:30<01:24, 1.94MB/s]    file_sizes:  19%|#####                      | 37.6M/202M [00:30<01:21, 2.02MB/s]    file_sizes:  19%|#####                      | 37.9M/202M [00:30<01:25, 1.92MB/s]    file_sizes:  19%|#####1                     | 38.2M/202M [00:30<01:18, 2.09MB/s]    file_sizes:  19%|#####1                     | 38.6M/202M [00:30<01:13, 2.21MB/s]    file_sizes:  19%|#####2                     | 38.9M/202M [00:30<01:14, 2.20MB/s]    file_sizes:  19%|#####2                     | 39.2M/202M [00:30<01:14, 2.18MB/s]    file_sizes:  20%|#####2                     | 39.6M/202M [00:31<01:10, 2.28MB/s]    file_sizes:  20%|#####3                     | 40.0M/202M [00:31<01:02, 2.59MB/s]    file_sizes:  20%|#####4                     | 40.3M/202M [00:31<00:57, 2.78MB/s]    file_sizes:  20%|#####4                     | 40.7M/202M [00:31<00:59, 2.69MB/s]    file_sizes:  20%|#####5                     | 41.1M/202M [00:31<01:00, 2.63MB/s]    file_sizes:  21%|#####5                     | 41.5M/202M [00:31<01:01, 2.62MB/s]    file_sizes:  21%|#####6                     | 42.2M/202M [00:31<00:52, 3.05MB/s]    file_sizes:  21%|#####7                     | 42.7M/202M [00:32<00:51, 3.09MB/s]    file_sizes:  21%|#####7                     | 43.2M/202M [00:32<00:50, 3.15MB/s]    file_sizes:  22%|#####8                     | 43.8M/202M [00:32<00:49, 3.21MB/s]    file_sizes:  22%|#####9                     | 44.3M/202M [00:32<00:48, 3.25MB/s]    file_sizes:  22%|#####9                     | 44.8M/202M [00:32<00:47, 3.34MB/s]    file_sizes:  22%|######                     | 45.3M/202M [00:32<00:46, 3.37MB/s]    file_sizes:  23%|######1                    | 46.1M/202M [00:33<00:41, 3.74MB/s]    file_sizes:  23%|######2                    | 46.6M/202M [00:33<00:41, 3.72MB/s]    file_sizes:  24%|######3                    | 47.4M/202M [00:33<00:38, 4.00MB/s]    file_sizes:  24%|######4                    | 47.9M/202M [00:33<00:37, 4.14MB/s]    file_sizes:  24%|######4                    | 48.5M/202M [00:33<00:36, 4.16MB/s]    file_sizes:  24%|######5                    | 49.3M/202M [00:33<00:34, 4.42MB/s]    file_sizes:  25%|######7                    | 50.0M/202M [00:33<00:33, 4.59MB/s]    file_sizes:  25%|######8                    | 50.8M/202M [00:34<00:31, 4.72MB/s]    file_sizes:  26%|######9                    | 51.6M/202M [00:34<00:31, 4.81MB/s]    file_sizes:  26%|#######                    | 52.4M/202M [00:34<00:30, 4.87MB/s]    file_sizes:  26%|#######1                   | 53.2M/202M [00:34<00:27, 5.38MB/s]    file_sizes:  27%|#######2                   | 54.0M/202M [00:34<00:26, 5.58MB/s]    file_sizes:  27%|#######3                   | 54.8M/202M [00:34<00:27, 5.44MB/s]    file_sizes:  28%|#######4                   | 55.5M/202M [00:34<00:26, 5.43MB/s]    file_sizes:  28%|#######6                   | 56.9M/202M [00:35<00:23, 6.14MB/s]    file_sizes:  29%|#######7                   | 57.9M/202M [00:35<00:22, 6.28MB/s]    file_sizes:  29%|#######8                   | 59.0M/202M [00:35<00:22, 6.40MB/s]    file_sizes:  30%|########                   | 60.0M/202M [00:35<00:21, 6.48MB/s]    file_sizes:  30%|########1                  | 61.1M/202M [00:35<00:21, 6.67MB/s]    file_sizes:  31%|########3                  | 62.1M/202M [00:35<00:20, 6.73MB/s]    file_sizes:  31%|########4                  | 63.2M/202M [00:35<00:19, 7.06MB/s]    file_sizes:  32%|########5                  | 64.2M/202M [00:36<00:18, 7.45MB/s]    file_sizes:  32%|########7                  | 65.2M/202M [00:36<00:18, 7.26MB/s]    file_sizes:  33%|########9                  | 66.8M/202M [00:36<00:16, 8.05MB/s]    file_sizes:  34%|#########                  | 67.9M/202M [00:36<00:15, 8.41MB/s]    file_sizes:  34%|#########2                 | 68.9M/202M [00:36<00:15, 8.41MB/s]    file_sizes:  35%|#########3                 | 70.0M/202M [00:36<00:16, 8.09MB/s]    file_sizes:  35%|#########5                 | 71.5M/202M [00:36<00:15, 8.67MB/s]    file_sizes:  36%|#########7                 | 73.1M/202M [00:37<00:14, 9.05MB/s]    file_sizes:  37%|##########                 | 74.7M/202M [00:37<00:13, 9.34MB/s]    file_sizes:  38%|##########2                | 76.3M/202M [00:37<00:13, 9.56MB/s]    file_sizes:  39%|##########4                | 77.8M/202M [00:37<00:12, 9.71MB/s]    file_sizes:  39%|##########6                | 79.4M/202M [00:37<00:11, 10.3MB/s]    file_sizes:  40%|##########8                | 81.0M/202M [00:37<00:11, 10.9MB/s]    file_sizes:  41%|###########                | 82.6M/202M [00:38<00:11, 10.7MB/s]    file_sizes:  42%|###########2               | 84.1M/202M [00:38<00:10, 11.5MB/s]    file_sizes:  42%|###########4               | 85.7M/202M [00:38<00:10, 11.5MB/s]    file_sizes:  43%|###########6               | 87.3M/202M [00:38<00:09, 11.6MB/s]    file_sizes:  44%|###########8               | 88.8M/202M [00:38<00:09, 11.8MB/s]    file_sizes:  45%|############1              | 90.4M/202M [00:38<00:09, 12.1MB/s]    file_sizes:  46%|############3              | 92.0M/202M [00:38<00:08, 12.6MB/s]    file_sizes:  46%|############5              | 93.6M/202M [00:38<00:08, 13.0MB/s]    file_sizes:  47%|############8              | 95.7M/202M [00:39<00:08, 13.1MB/s]    file_sizes:  48%|#############              | 97.8M/202M [00:39<00:07, 13.2MB/s]    file_sizes:  50%|#############3             | 99.9M/202M [00:39<00:07, 14.0MB/s]    file_sizes:  50%|##############              | 101M/202M [00:39<00:07, 13.8MB/s]    file_sizes:  51%|##############3             | 104M/202M [00:39<00:06, 14.9MB/s]    file_sizes:  52%|##############5             | 105M/202M [00:39<00:06, 14.8MB/s]    file_sizes:  53%|##############8             | 107M/202M [00:39<00:06, 15.2MB/s]    file_sizes:  54%|###############1            | 109M/202M [00:39<00:06, 14.7MB/s]    file_sizes:  55%|###############4            | 111M/202M [00:40<00:05, 15.4MB/s]    file_sizes:  57%|###############8            | 114M/202M [00:40<00:05, 16.0MB/s]    file_sizes:  58%|################1           | 117M/202M [00:40<00:04, 17.4MB/s]    file_sizes:  59%|################4           | 119M/202M [00:40<00:04, 17.6MB/s]    file_sizes:  60%|################7           | 121M/202M [00:40<00:04, 16.5MB/s]    file_sizes:  61%|#################1          | 123M/202M [00:40<00:04, 17.5MB/s]    file_sizes:  62%|#################4          | 126M/202M [00:40<00:04, 17.7MB/s]    file_sizes:  64%|#################8          | 129M/202M [00:41<00:03, 18.3MB/s]    file_sizes:  65%|##################1         | 131M/202M [00:41<00:04, 17.6MB/s]    file_sizes:  66%|##################4         | 133M/202M [00:41<00:03, 18.0MB/s]    file_sizes:  67%|##################8         | 136M/202M [00:41<00:03, 18.4MB/s]    file_sizes:  68%|###################1        | 138M/202M [00:41<00:03, 16.9MB/s]    file_sizes:  70%|###################6        | 142M/202M [00:41<00:03, 18.5MB/s]    file_sizes:  72%|####################        | 144M/202M [00:41<00:03, 17.9MB/s]    file_sizes:  73%|####################4       | 147M/202M [00:42<00:03, 17.5MB/s]    file_sizes:  75%|####################9       | 151M/202M [00:42<00:02, 18.9MB/s]    file_sizes:  76%|#####################2      | 153M/202M [00:42<00:02, 18.2MB/s]    file_sizes:  78%|#####################7      | 156M/202M [00:42<00:02, 18.4MB/s]    file_sizes:  79%|######################      | 159M/202M [00:42<00:02, 18.0MB/s]    file_sizes:  80%|######################4     | 162M/202M [00:42<00:02, 17.6MB/s]    file_sizes:  81%|######################7     | 164M/202M [00:43<00:02, 14.5MB/s]    file_sizes:  83%|#######################2    | 167M/202M [00:43<00:02, 16.7MB/s]    file_sizes:  84%|#######################5    | 170M/202M [00:43<00:02, 15.8MB/s]    file_sizes:  85%|#######################8    | 172M/202M [00:43<00:01, 15.1MB/s]    file_sizes:  86%|########################1   | 174M/202M [00:43<00:01, 14.7MB/s]    file_sizes:  87%|########################4   | 176M/202M [00:43<00:01, 15.1MB/s]    file_sizes:  89%|########################7   | 178M/202M [00:44<00:01, 14.6MB/s]    file_sizes:  90%|#########################1  | 181M/202M [00:44<00:01, 15.5MB/s]    file_sizes:  91%|#########################5  | 184M/202M [00:44<00:01, 15.7MB/s]    file_sizes:  92%|#########################7  | 186M/202M [00:44<00:01, 14.4MB/s]    file_sizes:  93%|##########################1 | 188M/202M [00:44<00:00, 15.0MB/s]    file_sizes:  95%|##########################4 | 191M/202M [00:44<00:00, 15.4MB/s]    file_sizes:  96%|##########################8 | 193M/202M [00:45<00:00, 12.1MB/s]    file_sizes:  98%|###########################4| 197M/202M [00:45<00:00, 15.0MB/s]    file_sizes:  99%|###########################7| 200M/202M [00:45<00:00, 15.2MB/s]    file_sizes: 100%|############################| 202M/202M [00:45<00:00, 14.0MB/s]    file_sizes: 100%|############################| 202M/202M [00:45<00:00, 4.42MB/s]
    Successfully downloaded file to /github/home/data/dicodile/gait/GaitData.zip




.. GENERATED FROM PYTHON SOURCE LINES 29-30

Let's have a look at the data for one trial.

.. GENERATED FROM PYTHON SOURCE LINES 30-33

.. code-block:: default


    trial.keys()





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    dict_keys(['Subject', 'Trial', 'Code', 'Age', 'Gender', 'Height', 'Weight', 'BMI', 'Laterality', 'Sensor', 'WalkedDistance', 'WalkingSpeed', 'PathologyGroup', 'IsControl', 'LeftFootActivity', 'RightFootActivity', 'data'])



.. GENERATED FROM PYTHON SOURCE LINES 34-37

We get a dictionary whose keys are metadata items, plus a 'data' key that
contains a numpy array with the trial time series for each sensor axis,
at 100 Hz resolution.

.. GENERATED FROM PYTHON SOURCE LINES 37-41

.. code-block:: default


    # right foot acceleration (vertical)
    plt.plot(trial['data']['RAV'])




.. image:: /auto_examples/images/sphx_glr_plot_gait_001.png
    :alt: plot gait
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    [<matplotlib.lines.Line2D object at 0x7f0e54734190>]



.. GENERATED FROM PYTHON SOURCE LINES 42-44

Let's look at a small portion of the series for both feet,
overlaid on the same plot

.. GENERATED FROM PYTHON SOURCE LINES 44-54

.. code-block:: default


    fig, ax = plt.subplots()
    ax.plot(trial['data']['LAV'][5000:5800],
            label='left foot vertical acceleration')
    ax.plot(trial['data']['RAV'][5000:5800],
            label='right foot vertical acceleration')
    ax.set_xlabel('time (x10ms)')
    ax.set_ylabel('acceleration ($m.s^{-2}$)')
    ax.legend()




.. image:: /auto_examples/images/sphx_glr_plot_gait_002.png
    :alt: plot gait
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f0e542c65b0>



.. GENERATED FROM PYTHON SOURCE LINES 55-59

We can see the alternating left and right foot movements.

In the rest of this example, we will only use the right foot
vertical acceleration.

.. GENERATED FROM PYTHON SOURCE LINES 61-68

Convolutional Dictionary Learning
---------------------------------

Now, let's use DiCoDiLe to learn patterns from the data and reconstruct
the signal from a sparse representation.

First, we initialize a dictionary from parts of the signal:

.. GENERATED FROM PYTHON SOURCE LINES 68-76

.. code-block:: default


    X = trial['data']['RAV'].to_numpy()
    X = X.reshape(1, *X.shape)

    print(X.shape)

    D_init = init_dictionary(X, n_atoms=8, atom_support=(200,), random_state=60)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (1, 18639)




.. GENERATED FROM PYTHON SOURCE LINES 77-81

Note the use of ``reshape`` to shape the signal as per ``dicodile``
requirements: the shape of the signal should be
``(n_channels, *sig_support)``.
Here, we have a single-channel time series so it is ``(1, n_times)``.

.. GENERATED FROM PYTHON SOURCE LINES 83-84

Then, we run DiCoDiLe!

.. GENERATED FROM PYTHON SOURCE LINES 84-93

.. code-block:: default


    D_hat, z_hat, pobj, times = dicodile(
        X, D_init, n_iter=3, n_workers=4, window=True,
        dicod_kwargs={"max_iter": 10000}, verbose=6
    )


    print("[DiCoDiLe] final cost : {}".format(pobj))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [DEBUG:DICODILE] Lambda_max = 1.7133212673372127
    /github/workspace/dicodile/workers/reusable_workers.py:50: UserWarning: You should not require different size
      warnings.warn("You should not require different size")
    Started 4 workers in 2.38s
    [INFO:DICODILE] - CD iterations 0 / 3 (0s)
    [DEBUG:DICODILE] lambda = 1.713e-01
    [INFO:DICOD-4] converged in 1.817s (1.070s) with 24018 iterations (10051 updates).
    [DEBUG:DICODILE] Objective (z) : 1.446e+01 (2s)
    [INFO:Update D]: 4 iterations
    [DEBUG:DICODILE] Objective (d) : 1.403e+01  (1s)
    [INFO:DICODILE] - CD iterations 1 / 3 (3s)
    [DEBUG:DICODILE] lambda = 1.713e-01
    [INFO:DICOD-4] converged in 1.068s (0.661s) with 23821 iterations (4643 updates).
    [DEBUG:DICODILE] Objective (z) : 1.377e+01 (1s)
    [INFO:Update D]: 4 iterations
    [DEBUG:DICODILE] Objective (d) : 1.375e+01  (1s)
    [INFO:DICODILE] - CD iterations 2 / 3 (6s)
    [DEBUG:DICODILE] lambda = 1.713e-01
    [INFO:DICOD-4] converged in 1.040s (0.583s) with 24142 iterations (4976 updates).
    [DEBUG:DICODILE] Objective (z) : 1.359e+01 (1s)
    [INFO:Update D]: 3 iterations
    [DEBUG:DICODILE] Objective (d) : 1.356e+01  (1s)
    [INFO:DICOD-4] converged in 0.700s (0.415s) with 9037 iterations (3344 updates).
    [INFO:DICODILE] Finished in 8s
    [DiCoDiLe] final cost : [37.92317851302482, 14.463217983152363, 14.028416350984147, 13.77085384486166, 13.749282778723554, 13.59458634538041, 13.562339258926071, 13.486388596227386]




.. GENERATED FROM PYTHON SOURCE LINES 94-97

We can order the dictionary patches by decreasing sum of the activations'
absolute values in the activations ``z_hat``, which, intuitively, gives
a measure of how they contribute to the reconstruction.

.. GENERATED FROM PYTHON SOURCE LINES 97-106

.. code-block:: default


    sum_abs_val = np.sum(np.abs(z_hat), axis=-1)

    # we negate sum_abs_val to sort in decreasing order
    patch_indices = np.argsort(-sum_abs_val)

    fig_reordered = display_dictionaries(D_init[patch_indices],
                                         D_hat[patch_indices])




.. image:: /auto_examples/images/sphx_glr_plot_gait_003.png
    :alt: plot gait
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 107-111

Signal reconstruction
^^^^^^^^^^^^^^^^^^^^^

Now, let's reconstruct the original signal

.. GENERATED FROM PYTHON SOURCE LINES 111-114

.. code-block:: default


    X_hat = reconstruct(z_hat, D_hat)








.. GENERATED FROM PYTHON SOURCE LINES 115-116

Plot a small part of the original and reconstructed signals

.. GENERATED FROM PYTHON SOURCE LINES 116-126

.. code-block:: default


    fig_hat, ax_hat = plt.subplots()
    ax_hat.plot(X[0][5000:5800],
                label='right foot vertical acceleration (ORIGINAL)')
    ax_hat.plot(X_hat[0][5000:5800],
                label='right foot vertical acceleration (RECONSTRUCTED)')
    ax_hat.set_xlabel('time (x10ms)')
    ax_hat.set_ylabel('acceleration ($m.s^{-2}$)')
    ax_hat.legend()




.. image:: /auto_examples/images/sphx_glr_plot_gait_004.png
    :alt: plot gait
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f0e3e03cb50>



.. GENERATED FROM PYTHON SOURCE LINES 127-128

Check that our representation is indeed sparse:

.. GENERATED FROM PYTHON SOURCE LINES 128-131

.. code-block:: default


    np.count_nonzero(z_hat)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    592



.. GENERATED FROM PYTHON SOURCE LINES 132-134

Besides our visual check, a measure of how closely we're reconstructing the
original signal is the (normalized) cross-correlation. Let's compute this:

.. GENERATED FROM PYTHON SOURCE LINES 134-138

.. code-block:: default


    np.correlate(X[0], X_hat[0]) / (
        np.sqrt(np.correlate(X[0], X[0]) * np.correlate(X_hat[0], X_hat[0])))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    array([0.9764042])



.. GENERATED FROM PYTHON SOURCE LINES 139-145

Multichannel signals
--------------------

DiCoDiLe works just as well with multi-channel signals. The gait dataset
contains 16 signals (8 for each foot), in the rest of this tutorial,
we'll use three of those.

.. GENERATED FROM PYTHON SOURCE LINES 145-149

.. code-block:: default


    # Left foot Vertical acceleration, Y rotation and X acceleration
    channels = ['LAV', 'LRY', 'LAX']








.. GENERATED FROM PYTHON SOURCE LINES 150-151

Let's look at a small portion of multi-channel data

.. GENERATED FROM PYTHON SOURCE LINES 151-161

.. code-block:: default


    colors = plt.rcParams["axes.prop_cycle"]()
    mc_fig, mc_ax = plt.subplots(len(channels), sharex=True)

    for ax, chan in zip(mc_ax, channels):
        ax.plot(trial['data'][chan][5000:5800],
                label=chan, color=next(colors)["color"])
    mc_fig.legend(loc="upper center")





.. image:: /auto_examples/images/sphx_glr_plot_gait_005.png
    :alt: plot gait
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f0e3df2ac40>



.. GENERATED FROM PYTHON SOURCE LINES 162-163

Let's put the data in shape for DiCoDiLe: (n_channels, n_times)

.. GENERATED FROM PYTHON SOURCE LINES 163-167

.. code-block:: default


    X_mc_subset = trial['data'][channels].to_numpy().T
    print(X_mc_subset.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (3, 18639)




.. GENERATED FROM PYTHON SOURCE LINES 168-170

Initialize the dictionary (note that the call is identical
to the single-channel version)

.. GENERATED FROM PYTHON SOURCE LINES 170-176

.. code-block:: default


    D_init_mc = init_dictionary(X_mc_subset,
                                n_atoms=8,
                                atom_support=(200,),
                                random_state=60)








.. GENERATED FROM PYTHON SOURCE LINES 177-179

And run DiCoDiLe (note that the call is identical to the single-channel
version here as well)

.. GENERATED FROM PYTHON SOURCE LINES 179-191

.. code-block:: default


    D_hat_mc, z_hat_mc, pobj_mc, times_mc = dicodile(X_mc_subset,
                                                     D_init_mc,
                                                     n_iter=3,
                                                     n_workers=4,
                                                     dicod_kwargs={"max_iter": 10000},  # noqa: E501
                                                     verbose=6,
                                                     window=True)


    print("[DiCoDiLe] final cost : {}".format(pobj_mc))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [DEBUG:DICODILE] Lambda_max = 903.7323963288766
    [INFO:DICODILE] - CD iterations 0 / 3 (0s)
    [DEBUG:DICODILE] lambda = 9.037e+01
    [INFO:DICOD-4] converged in 2.144s (1.439s) with 29936 iterations (12259 updates).
    [DEBUG:DICODILE] Objective (z) : 5.744e+06 (2s)
    [PROGRESS:Update D] 1s -   2.00% iterations (1.587e-07)    [PROGRESS:Update D] 1s -   3.00% iterations (1.587e-07)    [PROGRESS:Update D] 1s -   4.00% iterations (7.923e-08)    [INFO:Update D]: 5 iterations
    [DEBUG:DICODILE] Objective (d) : 5.553e+06  (2s)
    [INFO:DICODILE] - CD iterations 1 / 3 (5s)
    [DEBUG:DICODILE] lambda = 9.037e+01
    [INFO:DICOD-4] converged in 1.296s (0.786s) with 20502 iterations (6888 updates).
    [DEBUG:DICODILE] Objective (z) : 5.484e+06 (1s)
    [PROGRESS:Update D] 1s -   2.00% iterations (1.635e-08)    [INFO:Update D]: 3 iterations
    [DEBUG:DICODILE] Objective (d) : 5.481e+06  (2s)
    [INFO:DICODILE] - CD iterations 2 / 3 (9s)
    [DEBUG:DICODILE] lambda = 9.037e+01
    [INFO:DICOD-4] converged in 0.808s (0.542s) with 11529 iterations (4084 updates).
    [DEBUG:DICODILE] Objective (z) : 5.469e+06 (1s)
    [PROGRESS:Update D] 1s -   1.00% iterations (3.936e-08)    [INFO:Update D]: 2 iterations
    [DEBUG:DICODILE] Objective (d) : 5.469e+06  (2s)
    [INFO:DICOD-4] converged in 0.264s (0.138s) with 3763 iterations (974 updates).
    [INFO:DICODILE] Finished in 11s
    [DiCoDiLe] final cost : [20304139.366815556, 5744002.74478538, 5553399.088947814, 5483907.45398044, 5481249.616064025, 5469427.0352510335, 5469106.963379879, 5468354.960341615]




.. GENERATED FROM PYTHON SOURCE LINES 192-196

Signal reconstruction (multichannel)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Now, let's reconstruct the original signal

.. GENERATED FROM PYTHON SOURCE LINES 196-200

.. code-block:: default


    X_hat_mc = reconstruct(z_hat_mc, D_hat_mc)
    X_hat_mc.shape





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    (3, 18639)



.. GENERATED FROM PYTHON SOURCE LINES 201-203

Let's visually compare a small part of the original and reconstructed signals
along with the activations.

.. GENERATED FROM PYTHON SOURCE LINES 203-222

.. code-block:: default


    viz_start_idx = 4000
    viz_end_idx = 5800
    viz_chan = 2

    max_abs = np.max(np.abs(z_hat_mc), axis=-1)
    max_abs = max_abs.reshape(z_hat_mc.shape[0], 1)
    z_hat_normalized = z_hat_mc / max_abs
    fig_hat_mc, ax_hat_mc = plt.subplots(2, figsize=(12, 8))
    ax_hat_mc[0].plot(X_mc_subset[viz_chan][viz_start_idx:viz_end_idx],
                      label='ORIGINAL')
    ax_hat_mc[0].plot(X_hat_mc[viz_chan][viz_start_idx:viz_end_idx],
                      label='RECONSTRUCTED')
    for idx in range(z_hat_normalized.shape[0]):
        ax_hat_mc[1].stem(z_hat_normalized[idx][viz_start_idx:viz_end_idx],
                          linefmt=f"C{idx}-",
                          markerfmt=f"C{idx}o")
    ax_hat_mc[0].set_xlabel('time (x10ms)')
    ax_hat_mc[0].legend()



.. image:: /auto_examples/images/sphx_glr_plot_gait_006.png
    :alt: plot gait
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f0e3c64bfd0>




.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  21.553 seconds)


.. _sphx_glr_download_auto_examples_plot_gait.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_gait.py <plot_gait.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_gait.ipynb <plot_gait.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
