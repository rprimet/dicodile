
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_text.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_text.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_text.py:


DiCoDiLe on text images
=======================

This example illustrates pattern recovery on a noisy text image using
DiCoDiLe algorithm.

.. GENERATED FROM PYTHON SOURCE LINES 9-20

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from dicodile import dicodile
    from dicodile.data.images import fetch_letters_pami
    from dicodile.update_d.update_d import tukey_window
    from dicodile.utils.csc import reconstruct
    from dicodile.utils.dictionary import init_dictionary
    from dicodile.utils.viz import display_dictionaries









.. GENERATED FROM PYTHON SOURCE LINES 21-27

We will first load PAMI image generated from a text of **5000**
characters drawn uniformly from the **4** letters **P** **A** **M**
**I** and 2 whitespaces and assign it to `X`.

We will also load the images of the four characters used to generate
`X` and assign it to variable `D`.

.. GENERATED FROM PYTHON SOURCE LINES 27-31

.. code-block:: default


    X_original, D = fetch_letters_pami()






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Downloading data from https://s3-eu-west-1.amazonaws.com/pfigshare-u-files/26750168/text_4_5000_PAMI.npz (17.8 MB)

    file_sizes:   0%|                                   | 0.00/18.6M [00:00<?, ?B/s]    file_sizes:   0%|                           | 65.5k/18.6M [00:00<00:55, 332kB/s]    file_sizes:   1%|2                           | 164k/18.6M [00:00<00:30, 604kB/s]    file_sizes:   3%|7                          | 492k/18.6M [00:00<00:11, 1.60MB/s]    file_sizes:   5%|#4                        | 1.02M/18.6M [00:00<00:06, 2.87MB/s]    file_sizes:  11%|##8                       | 2.06M/18.6M [00:00<00:03, 5.09MB/s]    file_sizes:  28%|#######2                  | 5.21M/18.6M [00:00<00:01, 10.6MB/s]    file_sizes:  45%|###########6              | 8.36M/18.6M [00:00<00:00, 16.0MB/s]    file_sizes:  67%|#################5        | 12.6M/18.6M [00:01<00:00, 22.5MB/s]    file_sizes:  90%|#######################3  | 16.7M/18.6M [00:01<00:00, 22.4MB/s]    file_sizes: 100%|##########################| 18.6M/18.6M [00:01<00:00, 15.5MB/s]
    Successfully downloaded file to /github/home/data/dicodile/images/text/text_4_5000_PAMI.npz




.. GENERATED FROM PYTHON SOURCE LINES 32-36

We will work on the copy `X` of the original image and we need to reshape
image data `X` to fit to the expected signal shape of `dicodile`:

`(n_channels, *sig_support)`

.. GENERATED FROM PYTHON SOURCE LINES 36-41

.. code-block:: default


    X = X_original.copy()
    X = X.reshape(1, *X.shape)
    print(X.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (1, 2321, 2004)




.. GENERATED FROM PYTHON SOURCE LINES 42-45

Reshape `D` to fit to dictionary format:

`(n_atoms, n_channels, *atom_support)`

.. GENERATED FROM PYTHON SOURCE LINES 45-53

.. code-block:: default


    D = D.reshape(4, 1, *D.shape[-2:])

    # We pad `D` in order to have atoms with 0 on the border,
    # compatible with windowed dictionary.
    D = np.pad(D, [(0, 0), (0, 0), (4, 4), (4, 4)])
    print(D.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (4, 1, 37, 33)




.. GENERATED FROM PYTHON SOURCE LINES 54-56

Let's display an extract of the original text image `X_original` and
all the images of characters from `D`.

.. GENERATED FROM PYTHON SOURCE LINES 56-63

.. code-block:: default


    zoom_x = X_original[190:490, 250:750]
    plt.axis('off')
    plt.imshow(zoom_x, cmap='gray')

    display_dictionaries(D)




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_text_001.png
          :alt: plot text
          :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/images/sphx_glr_plot_text_002.png
          :alt: plot text
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <Figure size 640x480 with 4 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 64-66

We add some Gaussian white noise with standard deviation `std` 3 times
larger than `X.std` to `X`.

.. GENERATED FROM PYTHON SOURCE LINES 66-72

.. code-block:: default


    std = 3
    rng = np.random.default_rng(None)

    X += std * X.std() * rng.standard_normal(X.shape)








.. GENERATED FROM PYTHON SOURCE LINES 73-75

We will create a random dictionary of **K = 10** patches from the
noisy image.

.. GENERATED FROM PYTHON SOURCE LINES 75-91

.. code-block:: default


    # set number of patches
    n_atoms = 10
    # set individual atom (patch) size
    atom_support = np.array(D.shape[-2:])

    D_init = init_dictionary(X, n_atoms=n_atoms, atom_support=atom_support,
                             random_state=60)

    # window the dictionary, this helps make sure that the border values are 0
    atom_support = D_init.shape[-2:]
    tw = tukey_window(atom_support)[None, None]
    D_init *= tw

    print(D_init.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (10, 1, 37, 33)




.. GENERATED FROM PYTHON SOURCE LINES 92-94

Let's display an extract of noisy `X` and random dictionary `D_init`
generated from `X`.

.. GENERATED FROM PYTHON SOURCE LINES 94-101

.. code-block:: default


    zoom_x = X[0][190:490, 250:750]
    plt.axis('off')
    plt.imshow(zoom_x, cmap='gray')

    display_dictionaries(D_init)




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_text_003.png
          :alt: plot text
          :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/images/sphx_glr_plot_text_004.png
          :alt: plot text
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <Figure size 640x480 with 12 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 102-103

Set model parameters.

.. GENERATED FROM PYTHON SOURCE LINES 103-119

.. code-block:: default


    # regularization parameter
    reg = .2
    # maximum number of iterations
    n_iter = 100
    # when True, makes sure that the borders of the atoms are 0
    window = True
    # when True, requires all activations Z to be positive
    z_positive = True
    # number of workers to be used for computations
    n_workers = 10
    # number of jobs per row
    w_world = 'auto'
    # tolerance for minimal update size
    tol = 1e-3








.. GENERATED FROM PYTHON SOURCE LINES 120-121

Fit the dictionary with `dicodile`.

.. GENERATED FROM PYTHON SOURCE LINES 121-129

.. code-block:: default

    D_hat, z_hat, pobj, times = dicodile(X, D_init, reg=reg, n_iter=n_iter,
                                         window=window, z_positive=z_positive,
                                         n_workers=n_workers,
                                         dicod_kwargs={"max_iter": 10000},
                                         w_world=w_world, tol=tol, verbose=6)

    print("[DICOD] final cost : {}".format(pobj))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [DEBUG:DICODILE] Lambda_max = 24.487832063300694
    /github/workspace/dicodile/workers/reusable_workers.py:50: UserWarning: You should not require different size
      warnings.warn("You should not require different size")
    Started 10 workers in 6.61s
    [INFO:DICODILE] - CD iterations 0 / 100 (0s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 11.538s (9.583s) with 42910 iterations (9799 updates).
    [DEBUG:DICODILE] Objective (z) : 3.323e+06 (17s)
    [PROGRESS:Update D] 4s -   1.00% iterations (1.321e+00)    [PROGRESS:Update D] 9s -   2.00% iterations (2.179e-03)    [PROGRESS:Update D] 10s -   3.00% iterations (1.089e-03)    [PROGRESS:Update D] 11s -   4.00% iterations (1.089e-03)    [PROGRESS:Update D] 12s -   5.00% iterations (1.089e-03)    [PROGRESS:Update D] 13s -   6.00% iterations (1.089e-03)    [PROGRESS:Update D] 14s -   7.00% iterations (1.089e-03)    [PROGRESS:Update D] 15s -   8.00% iterations (1.089e-03)    [PROGRESS:Update D] 16s -   9.00% iterations (1.089e-03)    [PROGRESS:Update D] 17s -  10.00% iterations (1.089e-03)    [PROGRESS:Update D] 17s -  11.00% iterations (1.089e-03)    [PROGRESS:Update D] 18s -  12.00% iterations (1.089e-03)    [PROGRESS:Update D] 19s -  13.00% iterations (1.089e-03)    [PROGRESS:Update D] 20s -  14.00% iterations (1.089e-03)    [PROGRESS:Update D] 21s -  15.00% iterations (1.089e-03)    [PROGRESS:Update D] 22s -  16.00% iterations (1.089e-03)    [PROGRESS:Update D] 23s -  17.00% iterations (1.089e-03)    [PROGRESS:Update D] 24s -  18.00% iterations (1.089e-03)    [PROGRESS:Update D] 25s -  19.00% iterations (1.089e-03)    [PROGRESS:Update D] 26s -  20.00% iterations (1.089e-03)    [PROGRESS:Update D] 27s -  21.00% iterations (1.089e-03)    [PROGRESS:Update D] 28s -  22.00% iterations (1.089e-03)    [INFO:Update D]: 23 iterations
    [DEBUG:DICODILE] Objective (d) : 3.296e+06  (45s)
    [INFO:DICODILE] - CD iterations 1 / 100 (72s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 89.963s (74.267s) with 99990 iterations (92489 updates).
    [DEBUG:DICODILE] Objective (z) : 3.229e+06 (100s)
    [PROGRESS:Update D] 6s -   1.00% iterations (4.127e-02)    [PROGRESS:Update D] 9s -   2.00% iterations (2.181e-03)    [PROGRESS:Update D] 11s -   3.00% iterations (1.151e-04)    [PROGRESS:Update D] 12s -   4.00% iterations (1.151e-04)    [PROGRESS:Update D] 13s -   5.00% iterations (1.151e-04)    [PROGRESS:Update D] 14s -   6.00% iterations (5.756e-05)    [PROGRESS:Update D] 15s -   7.00% iterations (5.756e-05)    [PROGRESS:Update D] 16s -   8.00% iterations (5.756e-05)    [PROGRESS:Update D] 17s -   9.00% iterations (5.756e-05)    [PROGRESS:Update D] 18s -  10.00% iterations (5.756e-05)    [PROGRESS:Update D] 19s -  11.00% iterations (5.756e-05)    [PROGRESS:Update D] 20s -  12.00% iterations (2.878e-05)    [PROGRESS:Update D] 21s -  13.00% iterations (2.878e-05)    [PROGRESS:Update D] 23s -  14.00% iterations (1.439e-05)    [PROGRESS:Update D] 24s -  15.00% iterations (1.439e-05)    [PROGRESS:Update D] 25s -  16.00% iterations (1.439e-05)    [PROGRESS:Update D] 25s -  17.00% iterations (1.439e-05)    [PROGRESS:Update D] 26s -  18.00% iterations (1.439e-05)    [PROGRESS:Update D] 27s -  19.00% iterations (1.439e-05)    [PROGRESS:Update D] 28s -  20.00% iterations (1.439e-05)    [PROGRESS:Update D] 29s -  21.00% iterations (1.439e-05)    [PROGRESS:Update D] 30s -  22.00% iterations (1.439e-05)    [PROGRESS:Update D] 31s -  23.00% iterations (1.439e-05)    [PROGRESS:Update D] 32s -  24.00% iterations (1.439e-05)    [PROGRESS:Update D] 33s -  25.00% iterations (1.439e-05)    [PROGRESS:Update D] 34s -  26.00% iterations (1.439e-05)    [PROGRESS:Update D] 35s -  27.00% iterations (1.439e-05)    [PROGRESS:Update D] 36s -  28.00% iterations (1.439e-05)    [PROGRESS:Update D] 37s -  29.00% iterations (1.439e-05)    [PROGRESS:Update D] 38s -  30.00% iterations (1.439e-05)    [PROGRESS:Update D] 38s -  31.00% iterations (1.439e-05)    [PROGRESS:Update D] 39s -  32.00% iterations (1.439e-05)    [PROGRESS:Update D] 40s -  33.00% iterations (1.439e-05)    [PROGRESS:Update D] 41s -  34.00% iterations (1.439e-05)    [PROGRESS:Update D] 42s -  35.00% iterations (1.439e-05)    [PROGRESS:Update D] 43s -  36.00% iterations (1.439e-05)    [PROGRESS:Update D] 44s -  37.00% iterations (1.439e-05)    [PROGRESS:Update D] 45s -  38.00% iterations (1.439e-05)    [PROGRESS:Update D] 46s -  39.00% iterations (1.439e-05)    [PROGRESS:Update D] 47s -  40.00% iterations (1.439e-05)    [PROGRESS:Update D] 48s -  41.00% iterations (1.439e-05)    [PROGRESS:Update D] 48s -  42.00% iterations (1.439e-05)    [PROGRESS:Update D] 49s -  43.00% iterations (1.439e-05)    [PROGRESS:Update D] 50s -  44.00% iterations (1.439e-05)    [PROGRESS:Update D] 51s -  45.00% iterations (1.439e-05)    [PROGRESS:Update D] 52s -  46.00% iterations (1.439e-05)    [PROGRESS:Update D] 53s -  47.00% iterations (1.439e-05)    [PROGRESS:Update D] 54s -  48.00% iterations (1.439e-05)    [PROGRESS:Update D] 55s -  49.00% iterations (1.439e-05)    [PROGRESS:Update D] 56s -  50.00% iterations (1.439e-05)    [PROGRESS:Update D] 57s -  51.00% iterations (1.439e-05)    [PROGRESS:Update D] 58s -  52.00% iterations (1.439e-05)    [PROGRESS:Update D] 59s -  53.00% iterations (1.439e-05)    [PROGRESS:Update D] 59s -  54.00% iterations (1.439e-05)    [PROGRESS:Update D] 60s -  55.00% iterations (1.439e-05)    [PROGRESS:Update D] 61s -  56.00% iterations (1.439e-05)    [PROGRESS:Update D] 62s -  57.00% iterations (1.439e-05)    [PROGRESS:Update D] 63s -  58.00% iterations (1.439e-05)    [PROGRESS:Update D] 64s -  59.00% iterations (1.439e-05)    [PROGRESS:Update D] 65s -  60.00% iterations (1.439e-05)    [PROGRESS:Update D] 66s -  61.00% iterations (1.439e-05)    [PROGRESS:Update D] 67s -  62.00% iterations (1.439e-05)    [PROGRESS:Update D] 68s -  63.00% iterations (1.439e-05)    [INFO:Update D]: 64 iterations
    [DEBUG:DICODILE] Objective (d) : 3.218e+06  (86s)
    [INFO:DICODILE] - CD iterations 2 / 100 (267s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 87.580s (74.015s) with 99990 iterations (89783 updates).
    [DEBUG:DICODILE] Objective (z) : 3.205e+06 (99s)
    [PROGRESS:Update D] 6s -   1.00% iterations (4.127e-02)    [PROGRESS:Update D] 8s -   2.00% iterations (4.361e-03)    [PROGRESS:Update D] 11s -   3.00% iterations (1.152e-04)    [PROGRESS:Update D] 12s -   4.00% iterations (5.758e-05)    [PROGRESS:Update D] 13s -   5.00% iterations (5.758e-05)    [PROGRESS:Update D] 14s -   6.00% iterations (5.758e-05)    [PROGRESS:Update D] 15s -   7.00% iterations (5.758e-05)    [PROGRESS:Update D] 16s -   8.00% iterations (2.879e-05)    [PROGRESS:Update D] 17s -   9.00% iterations (2.879e-05)    [PROGRESS:Update D] 19s -  10.00% iterations (1.439e-05)    [PROGRESS:Update D] 20s -  11.00% iterations (1.439e-05)    [PROGRESS:Update D] 21s -  12.00% iterations (1.439e-05)    [PROGRESS:Update D] 21s -  13.00% iterations (1.439e-05)    [PROGRESS:Update D] 22s -  14.00% iterations (1.439e-05)    [PROGRESS:Update D] 23s -  15.00% iterations (1.439e-05)    [PROGRESS:Update D] 24s -  16.00% iterations (1.439e-05)    [PROGRESS:Update D] 25s -  17.00% iterations (1.439e-05)    [PROGRESS:Update D] 26s -  18.00% iterations (1.439e-05)    [PROGRESS:Update D] 27s -  19.00% iterations (1.439e-05)    [PROGRESS:Update D] 28s -  20.00% iterations (1.439e-05)    [PROGRESS:Update D] 29s -  21.00% iterations (1.439e-05)    [PROGRESS:Update D] 29s -  22.00% iterations (1.439e-05)    [PROGRESS:Update D] 30s -  23.00% iterations (1.439e-05)    [PROGRESS:Update D] 31s -  24.00% iterations (1.439e-05)    [PROGRESS:Update D] 32s -  25.00% iterations (1.439e-05)    [PROGRESS:Update D] 33s -  26.00% iterations (1.439e-05)    [PROGRESS:Update D] 34s -  27.00% iterations (1.439e-05)    [PROGRESS:Update D] 35s -  28.00% iterations (1.439e-05)    [PROGRESS:Update D] 36s -  29.00% iterations (1.439e-05)    [PROGRESS:Update D] 37s -  30.00% iterations (1.439e-05)    [PROGRESS:Update D] 37s -  31.00% iterations (1.439e-05)    [PROGRESS:Update D] 38s -  32.00% iterations (1.439e-05)    [PROGRESS:Update D] 39s -  33.00% iterations (1.439e-05)    [PROGRESS:Update D] 40s -  34.00% iterations (1.439e-05)    [PROGRESS:Update D] 41s -  35.00% iterations (1.439e-05)    [PROGRESS:Update D] 42s -  36.00% iterations (1.439e-05)    [PROGRESS:Update D] 43s -  37.00% iterations (1.439e-05)    [PROGRESS:Update D] 43s -  38.00% iterations (1.439e-05)    [PROGRESS:Update D] 44s -  39.00% iterations (1.439e-05)    [PROGRESS:Update D] 45s -  40.00% iterations (1.439e-05)    [PROGRESS:Update D] 46s -  41.00% iterations (1.439e-05)    [PROGRESS:Update D] 47s -  42.00% iterations (1.439e-05)    [PROGRESS:Update D] 48s -  43.00% iterations (1.439e-05)    [PROGRESS:Update D] 49s -  44.00% iterations (1.439e-05)    [PROGRESS:Update D] 50s -  45.00% iterations (1.439e-05)    [PROGRESS:Update D] 51s -  46.00% iterations (1.439e-05)    [PROGRESS:Update D] 51s -  47.00% iterations (1.439e-05)    [PROGRESS:Update D] 52s -  48.00% iterations (1.439e-05)    [PROGRESS:Update D] 53s -  49.00% iterations (1.439e-05)    [PROGRESS:Update D] 54s -  50.00% iterations (1.439e-05)    [PROGRESS:Update D] 55s -  51.00% iterations (1.439e-05)    [PROGRESS:Update D] 56s -  52.00% iterations (1.439e-05)    [PROGRESS:Update D] 57s -  53.00% iterations (1.439e-05)    [PROGRESS:Update D] 57s -  54.00% iterations (1.439e-05)    [PROGRESS:Update D] 58s -  55.00% iterations (1.439e-05)    [PROGRESS:Update D] 59s -  56.00% iterations (1.439e-05)    [PROGRESS:Update D] 60s -  57.00% iterations (1.439e-05)    [PROGRESS:Update D] 61s -  58.00% iterations (1.439e-05)    [PROGRESS:Update D] 62s -  59.00% iterations (1.439e-05)    [PROGRESS:Update D] 63s -  60.00% iterations (1.439e-05)    [PROGRESS:Update D] 63s -  61.00% iterations (1.439e-05)    [PROGRESS:Update D] 64s -  62.00% iterations (1.439e-05)    [PROGRESS:Update D] 65s -  63.00% iterations (1.439e-05)    [PROGRESS:Update D] 66s -  64.00% iterations (1.439e-05)    [PROGRESS:Update D] 67s -  65.00% iterations (1.439e-05)    [PROGRESS:Update D] 68s -  66.00% iterations (1.439e-05)    [PROGRESS:Update D] 69s -  67.00% iterations (1.439e-05)    [PROGRESS:Update D] 69s -  68.00% iterations (1.439e-05)    [PROGRESS:Update D] 70s -  69.00% iterations (1.439e-05)    [PROGRESS:Update D] 71s -  70.00% iterations (1.439e-05)    [PROGRESS:Update D] 72s -  71.00% iterations (1.439e-05)    [PROGRESS:Update D] 73s -  72.00% iterations (1.439e-05)    [PROGRESS:Update D] 74s -  73.00% iterations (1.439e-05)    [PROGRESS:Update D] 75s -  74.00% iterations (1.439e-05)    [PROGRESS:Update D] 76s -  75.00% iterations (1.439e-05)    [INFO:Update D]: 76 iterations
    [DEBUG:DICODILE] Objective (d) : 3.196e+06  (93s)
    [INFO:DICODILE] - CD iterations 3 / 100 (468s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 83.760s (70.654s) with 99990 iterations (86380 updates).
    [DEBUG:DICODILE] Objective (z) : 3.181e+06 (95s)
    [PROGRESS:Update D] 8s -   1.00% iterations (6.449e-04)    [PROGRESS:Update D] 11s -   2.00% iterations (6.802e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (6.802e-05)    [PROGRESS:Update D] 12s -   4.00% iterations (6.802e-05)    [PROGRESS:Update D] 14s -   5.00% iterations (3.400e-05)    [PROGRESS:Update D] 15s -   6.00% iterations (3.400e-05)    [PROGRESS:Update D] 15s -   7.00% iterations (3.400e-05)    [PROGRESS:Update D] 16s -   8.00% iterations (3.400e-05)    [PROGRESS:Update D] 17s -   9.00% iterations (3.400e-05)    [PROGRESS:Update D] 18s -  10.00% iterations (3.400e-05)    [PROGRESS:Update D] 19s -  11.00% iterations (3.400e-05)    [PROGRESS:Update D] 20s -  12.00% iterations (1.700e-05)    [PROGRESS:Update D] 22s -  13.00% iterations (8.501e-06)    [INFO:Update D]: 14 iterations
    [DEBUG:DICODILE] Objective (d) : 3.169e+06  (38s)
    [INFO:DICODILE] - CD iterations 4 / 100 (612s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 83.672s (70.477s) with 99990 iterations (84531 updates).
    [DEBUG:DICODILE] Objective (z) : 3.161e+06 (95s)
    [PROGRESS:Update D] 8s -   1.00% iterations (6.449e-04)    [PROGRESS:Update D] 11s -   2.00% iterations (3.378e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (3.378e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (3.378e-05)    [PROGRESS:Update D] 14s -   5.00% iterations (1.688e-05)    [PROGRESS:Update D] 15s -   6.00% iterations (1.688e-05)    [PROGRESS:Update D] 16s -   7.00% iterations (1.688e-05)    [PROGRESS:Update D] 17s -   8.00% iterations (1.688e-05)    [PROGRESS:Update D] 18s -   9.00% iterations (8.442e-06)    [PROGRESS:Update D] 19s -  10.00% iterations (8.442e-06)    [PROGRESS:Update D] 20s -  11.00% iterations (4.221e-06)    [PROGRESS:Update D] 22s -  12.00% iterations (8.920e-07)    [INFO:Update D]: 13 iterations
    [DEBUG:DICODILE] Objective (d) : 3.156e+06  (37s)
    [INFO:DICODILE] - CD iterations 5 / 100 (753s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 78.505s (66.035s) with 99990 iterations (78694 updates).
    [DEBUG:DICODILE] Objective (z) : 3.154e+06 (90s)
    [PROGRESS:Update D] 7s -   1.00% iterations (5.159e-03)    [PROGRESS:Update D] 11s -   2.00% iterations (3.404e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (3.404e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (1.702e-05)    [PROGRESS:Update D] 14s -   5.00% iterations (1.702e-05)    [PROGRESS:Update D] 15s -   6.00% iterations (1.702e-05)    [PROGRESS:Update D] 16s -   7.00% iterations (1.702e-05)    [PROGRESS:Update D] 17s -   8.00% iterations (1.702e-05)    [PROGRESS:Update D] 18s -   9.00% iterations (1.702e-05)    [PROGRESS:Update D] 18s -  10.00% iterations (1.702e-05)    [PROGRESS:Update D] 19s -  11.00% iterations (1.702e-05)    [PROGRESS:Update D] 20s -  12.00% iterations (1.702e-05)    [PROGRESS:Update D] 21s -  13.00% iterations (1.702e-05)    [PROGRESS:Update D] 22s -  14.00% iterations (1.702e-05)    [PROGRESS:Update D] 23s -  15.00% iterations (1.702e-05)    [PROGRESS:Update D] 24s -  16.00% iterations (1.702e-05)    [PROGRESS:Update D] 25s -  17.00% iterations (1.702e-05)    [INFO:Update D]: 18 iterations
    [DEBUG:DICODILE] Objective (d) : 3.153e+06  (42s)
    [INFO:DICODILE] - CD iterations 6 / 100 (894s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 74.204s (61.928s) with 99990 iterations (73001 updates).
    [DEBUG:DICODILE] Objective (z) : 3.152e+06 (85s)
    [PROGRESS:Update D] 7s -   1.00% iterations (5.159e-03)    [PROGRESS:Update D] 11s -   2.00% iterations (6.811e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (3.405e-05)    [PROGRESS:Update D] 14s -   4.00% iterations (1.703e-05)    [PROGRESS:Update D] 15s -   5.00% iterations (1.703e-05)    [PROGRESS:Update D] 16s -   6.00% iterations (1.703e-05)    [PROGRESS:Update D] 16s -   7.00% iterations (1.703e-05)    [PROGRESS:Update D] 17s -   8.00% iterations (1.703e-05)    [PROGRESS:Update D] 18s -   9.00% iterations (1.703e-05)    [PROGRESS:Update D] 19s -  10.00% iterations (1.703e-05)    [PROGRESS:Update D] 20s -  11.00% iterations (1.703e-05)    [PROGRESS:Update D] 21s -  12.00% iterations (1.703e-05)    [PROGRESS:Update D] 22s -  13.00% iterations (1.703e-05)    [INFO:Update D]: 14 iterations
    [DEBUG:DICODILE] Objective (d) : 3.151e+06  (38s)
    [INFO:DICODILE] - CD iterations 7 / 100 (1028s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 70.956s (59.145s) with 99990 iterations (69446 updates).
    [DEBUG:DICODILE] Objective (z) : 3.150e+06 (82s)
    [PROGRESS:Update D] 7s -   1.00% iterations (2.580e-03)    [PROGRESS:Update D] 11s -   2.00% iterations (6.810e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (3.403e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (1.701e-05)    [PROGRESS:Update D] 14s -   5.00% iterations (1.701e-05)    [PROGRESS:Update D] 15s -   6.00% iterations (1.701e-05)    [PROGRESS:Update D] 16s -   7.00% iterations (1.701e-05)    [PROGRESS:Update D] 17s -   8.00% iterations (1.701e-05)    [PROGRESS:Update D] 18s -   9.00% iterations (1.701e-05)    [PROGRESS:Update D] 19s -  10.00% iterations (1.701e-05)    [PROGRESS:Update D] 20s -  11.00% iterations (8.507e-06)    [INFO:Update D]: 12 iterations
    [DEBUG:DICODILE] Objective (d) : 3.149e+06  (36s)
    [INFO:DICODILE] - CD iterations 8 / 100 (1155s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 67.206s (56.219s) with 99990 iterations (65101 updates).
    [DEBUG:DICODILE] Objective (z) : 3.149e+06 (78s)
    [PROGRESS:Update D] 8s -   1.00% iterations (6.449e-04)    [PROGRESS:Update D] 11s -   2.00% iterations (3.406e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (3.406e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (1.703e-05)    [PROGRESS:Update D] 14s -   5.00% iterations (1.703e-05)    [PROGRESS:Update D] 15s -   6.00% iterations (1.703e-05)    [PROGRESS:Update D] 16s -   7.00% iterations (1.703e-05)    [PROGRESS:Update D] 17s -   8.00% iterations (8.514e-06)    [INFO:Update D]: 9 iterations
    [DEBUG:DICODILE] Objective (d) : 3.148e+06  (33s)
    [INFO:DICODILE] - CD iterations 9 / 100 (1275s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 61.448s (52.393s) with 99990 iterations (58950 updates).
    [DEBUG:DICODILE] Objective (z) : 3.147e+06 (72s)
    [PROGRESS:Update D] 9s -   1.00% iterations (6.449e-04)    [PROGRESS:Update D] 11s -   2.00% iterations (3.405e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (3.405e-05)    [PROGRESS:Update D] 14s -   4.00% iterations (1.702e-05)    [PROGRESS:Update D] 14s -   5.00% iterations (1.702e-05)    [PROGRESS:Update D] 15s -   6.00% iterations (1.702e-05)    [PROGRESS:Update D] 16s -   7.00% iterations (1.702e-05)    [PROGRESS:Update D] 18s -   8.00% iterations (8.512e-06)    [INFO:Update D]: 9 iterations
    [DEBUG:DICODILE] Objective (d) : 3.147e+06  (33s)
    [INFO:DICODILE] - CD iterations 10 / 100 (1391s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 53.672s (44.024s) with 99990 iterations (50727 updates).
    [DEBUG:DICODILE] Objective (z) : 3.146e+06 (65s)
    [PROGRESS:Update D] 8s -   1.00% iterations (1.290e-03)    [PROGRESS:Update D] 11s -   2.00% iterations (3.406e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (3.406e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (1.703e-05)    [PROGRESS:Update D] 14s -   5.00% iterations (1.703e-05)    [PROGRESS:Update D] 15s -   6.00% iterations (1.703e-05)    [PROGRESS:Update D] 16s -   7.00% iterations (1.703e-05)    [PROGRESS:Update D] 17s -   8.00% iterations (1.703e-05)    [PROGRESS:Update D] 18s -   9.00% iterations (1.703e-05)    [PROGRESS:Update D] 19s -  10.00% iterations (8.514e-06)    [PROGRESS:Update D] 20s -  11.00% iterations (8.514e-06)    [PROGRESS:Update D] 22s -  12.00% iterations (8.996e-07)    [PROGRESS:Update D] 23s -  13.00% iterations (8.996e-07)    [PROGRESS:Update D] 26s -  14.00% iterations (4.753e-08)    [PROGRESS:Update D] 27s -  15.00% iterations (2.376e-08)    [PROGRESS:Update D] 29s -  16.00% iterations (1.188e-08)    [INFO:Update D]: 17 iterations
    [DEBUG:DICODILE] Objective (d) : 3.146e+06  (38s)
    [INFO:DICODILE] - CD iterations 11 / 100 (1503s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 45.444s (37.888s) with 99545 iterations (42581 updates).
    [DEBUG:DICODILE] Objective (z) : 3.145e+06 (56s)
    [PROGRESS:Update D] 2s -   2.00% iterations (1.256e-07)    [PROGRESS:Update D] 3s -   3.00% iterations (1.256e-07)    [PROGRESS:Update D] 3s -   4.00% iterations (1.256e-07)    [PROGRESS:Update D] 4s -   5.00% iterations (1.256e-07)    [PROGRESS:Update D] 5s -   6.00% iterations (1.256e-07)    [PROGRESS:Update D] 6s -   7.00% iterations (1.256e-07)    [PROGRESS:Update D] 7s -   8.00% iterations (1.256e-07)    [PROGRESS:Update D] 8s -   9.00% iterations (1.256e-07)    [PROGRESS:Update D] 9s -  10.00% iterations (1.256e-07)    [PROGRESS:Update D] 10s -  11.00% iterations (1.256e-07)    [PROGRESS:Update D] 11s -  12.00% iterations (1.256e-07)    [PROGRESS:Update D] 11s -  13.00% iterations (1.256e-07)    [PROGRESS:Update D] 12s -  14.00% iterations (1.256e-07)    [PROGRESS:Update D] 13s -  15.00% iterations (1.256e-07)    [PROGRESS:Update D] 14s -  16.00% iterations (1.256e-07)    [PROGRESS:Update D] 15s -  17.00% iterations (1.256e-07)    [PROGRESS:Update D] 16s -  18.00% iterations (1.256e-07)    [PROGRESS:Update D] 17s -  19.00% iterations (1.256e-07)    [PROGRESS:Update D] 18s -  20.00% iterations (1.256e-07)    [PROGRESS:Update D] 19s -  21.00% iterations (1.256e-07)    [PROGRESS:Update D] 20s -  22.00% iterations (1.256e-07)    [PROGRESS:Update D] 20s -  23.00% iterations (1.256e-07)    [PROGRESS:Update D] 21s -  24.00% iterations (1.256e-07)    [PROGRESS:Update D] 22s -  25.00% iterations (1.256e-07)    [PROGRESS:Update D] 23s -  26.00% iterations (1.256e-07)    [PROGRESS:Update D] 24s -  27.00% iterations (1.256e-07)    [PROGRESS:Update D] 25s -  28.00% iterations (1.256e-07)    [PROGRESS:Update D] 26s -  29.00% iterations (1.256e-07)    [PROGRESS:Update D] 27s -  30.00% iterations (1.256e-07)    [PROGRESS:Update D] 28s -  31.00% iterations (1.256e-07)    [PROGRESS:Update D] 28s -  32.00% iterations (1.256e-07)    [PROGRESS:Update D] 29s -  33.00% iterations (1.256e-07)    [PROGRESS:Update D] 30s -  34.00% iterations (1.256e-07)    [PROGRESS:Update D] 31s -  35.00% iterations (1.256e-07)    [PROGRESS:Update D] 32s -  36.00% iterations (1.256e-07)    [PROGRESS:Update D] 33s -  37.00% iterations (1.256e-07)    [PROGRESS:Update D] 34s -  38.00% iterations (1.256e-07)    [PROGRESS:Update D] 35s -  39.00% iterations (1.256e-07)    [PROGRESS:Update D] 36s -  40.00% iterations (1.256e-07)    [PROGRESS:Update D] 37s -  41.00% iterations (1.256e-07)    [PROGRESS:Update D] 38s -  42.00% iterations (1.256e-07)    [PROGRESS:Update D] 38s -  43.00% iterations (1.256e-07)    [PROGRESS:Update D] 39s -  44.00% iterations (1.256e-07)    [PROGRESS:Update D] 40s -  45.00% iterations (1.256e-07)    [PROGRESS:Update D] 41s -  46.00% iterations (1.256e-07)    [PROGRESS:Update D] 42s -  47.00% iterations (1.256e-07)    [PROGRESS:Update D] 43s -  48.00% iterations (1.256e-07)    [PROGRESS:Update D] 44s -  49.00% iterations (1.256e-07)    [PROGRESS:Update D] 45s -  50.00% iterations (1.256e-07)    [PROGRESS:Update D] 46s -  51.00% iterations (1.256e-07)    [PROGRESS:Update D] 47s -  52.00% iterations (1.256e-07)    [PROGRESS:Update D] 47s -  53.00% iterations (1.256e-07)    [PROGRESS:Update D] 48s -  54.00% iterations (1.256e-07)    [PROGRESS:Update D] 49s -  55.00% iterations (1.256e-07)    [PROGRESS:Update D] 50s -  56.00% iterations (1.256e-07)    [PROGRESS:Update D] 51s -  57.00% iterations (1.256e-07)    [PROGRESS:Update D] 52s -  58.00% iterations (1.256e-07)    [PROGRESS:Update D] 53s -  59.00% iterations (1.256e-07)    [PROGRESS:Update D] 54s -  60.00% iterations (1.256e-07)    [PROGRESS:Update D] 55s -  61.00% iterations (1.256e-07)    [PROGRESS:Update D] 56s -  62.00% iterations (1.256e-07)    [PROGRESS:Update D] 57s -  63.00% iterations (1.256e-07)    [PROGRESS:Update D] 57s -  64.00% iterations (1.256e-07)    [PROGRESS:Update D] 58s -  65.00% iterations (1.256e-07)    [PROGRESS:Update D] 59s -  66.00% iterations (1.256e-07)    [PROGRESS:Update D] 60s -  67.00% iterations (1.256e-07)    [PROGRESS:Update D] 61s -  68.00% iterations (1.256e-07)    [PROGRESS:Update D] 62s -  69.00% iterations (1.256e-07)    [PROGRESS:Update D] 63s -  70.00% iterations (1.256e-07)    [PROGRESS:Update D] 64s -  71.00% iterations (1.256e-07)    [PROGRESS:Update D] 65s -  72.00% iterations (1.256e-07)    [PROGRESS:Update D] 65s -  73.00% iterations (1.256e-07)    [PROGRESS:Update D] 66s -  74.00% iterations (1.256e-07)    [PROGRESS:Update D] 67s -  75.00% iterations (1.256e-07)    [PROGRESS:Update D] 68s -  76.00% iterations (1.256e-07)    [PROGRESS:Update D] 69s -  77.00% iterations (1.256e-07)    [PROGRESS:Update D] 70s -  78.00% iterations (1.256e-07)    [PROGRESS:Update D] 71s -  79.00% iterations (1.256e-07)    [PROGRESS:Update D] 72s -  80.00% iterations (1.256e-07)    [PROGRESS:Update D] 73s -  81.00% iterations (1.256e-07)    [PROGRESS:Update D] 73s -  82.00% iterations (1.256e-07)    [PROGRESS:Update D] 74s -  83.00% iterations (1.256e-07)    [PROGRESS:Update D] 75s -  84.00% iterations (1.256e-07)    [PROGRESS:Update D] 76s -  85.00% iterations (1.256e-07)    [PROGRESS:Update D] 77s -  86.00% iterations (1.256e-07)    [PROGRESS:Update D] 78s -  87.00% iterations (1.256e-07)    [PROGRESS:Update D] 79s -  88.00% iterations (1.256e-07)    [PROGRESS:Update D] 80s -  89.00% iterations (1.256e-07)    [PROGRESS:Update D] 81s -  90.00% iterations (1.256e-07)    [PROGRESS:Update D] 82s -  91.00% iterations (1.256e-07)    [PROGRESS:Update D] 83s -  92.00% iterations (1.256e-07)    [PROGRESS:Update D] 83s -  93.00% iterations (1.256e-07)    [PROGRESS:Update D] 84s -  94.00% iterations (1.256e-07)    [PROGRESS:Update D] 85s -  95.00% iterations (1.256e-07)    [PROGRESS:Update D] 86s -  96.00% iterations (1.256e-07)    [PROGRESS:Update D] 87s -  97.00% iterations (1.256e-07)    [PROGRESS:Update D] 88s -  98.00% iterations (1.256e-07)    [PROGRESS:Update D] 89s -  99.00% iterations (1.256e-07)    [INFO:Update D] update did not converge                    
    [INFO:Update D]: 100 iterations
    [DEBUG:DICODILE] Objective (d) : 3.145e+06  (96s)
    [INFO:DICODILE] - CD iterations 12 / 100 (1665s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 22.858s (18.367s) with 85394 iterations (19695 updates).
    [DEBUG:DICODILE] Objective (z) : 3.145e+06 (34s)
    [PROGRESS:Update D] 2s -   2.00% iterations (1.256e-05)    [PROGRESS:Update D] 3s -   3.00% iterations (1.256e-05)    [PROGRESS:Update D] 4s -   4.00% iterations (1.256e-05)    [PROGRESS:Update D] 5s -   5.00% iterations (1.256e-05)    [PROGRESS:Update D] 6s -   6.00% iterations (1.256e-05)    [PROGRESS:Update D] 6s -   7.00% iterations (1.256e-05)    [PROGRESS:Update D] 7s -   8.00% iterations (1.256e-05)    [PROGRESS:Update D] 8s -   9.00% iterations (1.256e-05)    [PROGRESS:Update D] 9s -  10.00% iterations (1.256e-05)    [PROGRESS:Update D] 10s -  11.00% iterations (1.256e-05)    [PROGRESS:Update D] 11s -  12.00% iterations (1.256e-05)    [PROGRESS:Update D] 12s -  13.00% iterations (1.256e-05)    [PROGRESS:Update D] 13s -  14.00% iterations (1.256e-05)    [INFO:Update D]: 15 iterations
    [DEBUG:DICODILE] Objective (d) : 3.145e+06  (29s)
    [INFO:DICODILE] - CD iterations 13 / 100 (1738s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 35.284s (29.357s) with 98715 iterations (31838 updates).
    [DEBUG:DICODILE] Objective (z) : 3.145e+06 (46s)
    [PROGRESS:Update D] 8s -   1.00% iterations (1.290e-03)    [PROGRESS:Update D] 11s -   2.00% iterations (3.407e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (3.407e-05)    [PROGRESS:Update D] 14s -   4.00% iterations (3.600e-06)    [INFO:Update D]: 5 iterations
    [DEBUG:DICODILE] Objective (d) : 3.145e+06  (29s)
    [INFO:DICODILE] - CD iterations 14 / 100 (1823s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 33.432s (27.585s) with 93822 iterations (30649 updates).
    [DEBUG:DICODILE] Objective (z) : 3.144e+06 (44s)
    [PROGRESS:Update D] 8s -   1.00% iterations (6.449e-04)    [PROGRESS:Update D] 11s -   2.00% iterations (6.814e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (3.407e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (1.704e-05)    [PROGRESS:Update D] 14s -   5.00% iterations (8.518e-06)    [INFO:Update D]: 6 iterations
    [DEBUG:DICODILE] Objective (d) : 3.144e+06  (31s)
    [INFO:DICODILE] - CD iterations 15 / 100 (1907s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 26.702s (21.162s) with 89880 iterations (23397 updates).
    [DEBUG:DICODILE] Objective (z) : 3.144e+06 (37s)
    [PROGRESS:Update D] 9s -   1.00% iterations (3.225e-04)    [PROGRESS:Update D] 11s -   2.00% iterations (6.814e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (6.814e-05)    [PROGRESS:Update D] 14s -   4.00% iterations (7.200e-06)    [INFO:Update D]: 5 iterations
    [DEBUG:DICODILE] Objective (d) : 3.144e+06  (30s)
    [INFO:DICODILE] - CD iterations 16 / 100 (1984s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 23.582s (18.951s) with 84428 iterations (20246 updates).
    [DEBUG:DICODILE] Objective (z) : 3.144e+06 (35s)
    [PROGRESS:Update D] 10s -   1.00% iterations (1.612e-04)    [PROGRESS:Update D] 11s -   2.00% iterations (1.612e-04)    [INFO:Update D]: 3 iterations
    [DEBUG:DICODILE] Objective (d) : 3.144e+06  (29s)
    [INFO:DICODILE] - CD iterations 17 / 100 (2057s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 18.543s (15.111s) with 67841 iterations (16078 updates).
    [DEBUG:DICODILE] Objective (z) : 3.144e+06 (29s)
    [PROGRESS:Update D] 13s -   1.00% iterations (1.260e-06)    [INFO:Update D]: 2 iterations
    [DEBUG:DICODILE] Objective (d) : 3.144e+06  (28s)
    [INFO:DICODILE] - CD iterations 18 / 100 (2124s)
    [DEBUG:DICODILE] lambda = 4.898e+00
    [INFO:DICOD-10] converged in 1.028s (0.640s) with 11434 iterations (420 updates).
    [DEBUG:DICODILE] Objective (z) : 3.144e+06 (12s)
    [INFO:Update D]: 1 iterations
    [DEBUG:DICODILE] Objective (d) : 3.144e+06  (26s)
    [INFO:DICODILE] Converged after 19 iteration, (dz, du) = 3.334e-08, 0.000e+00
    /usr/local/lib/python3.8/site-packages/numpy/core/fromnumeric.py:3419: RuntimeWarning: Mean of empty slice.
      return _methods._mean(a, axis=axis, dtype=dtype,
    /usr/local/lib/python3.8/site-packages/numpy/core/_methods.py:188: RuntimeWarning: invalid value encountered in double_scalars
      ret = ret.dtype.type(ret / rcount)
    [INFO:DICOD-10] converged in 0.356s (0.130s) with 890 iterations (0 updates).
    [INFO:DICODILE] Finished in 1992s
    [DICOD] final cost : [3327550.7345729885, 3322537.6288340446, 3295555.539502192, 3229322.048456204, 3218404.003060943, 3204985.367891468, 3195763.4673375282, 3181235.9125103075, 3168575.9742318825, 3160825.3881939296, 3156351.505361652, 3154270.899121689, 3152842.399230372, 3151833.2622345355, 3151054.2095471043, 3150234.810806378, 3149495.7249835376, 3148694.6465486274, 3147982.01849518, 3147329.266782183, 3146786.6018830957, 3146275.1319211135, 3145873.656472574, 3145425.4759644745, 3145294.9118728656, 3145270.0023248717, 3144977.0886293706, 3144732.37356796, 3144552.2732770825, 3144304.3919632346, 3144223.7710202388, 3144107.8737501046, 3144068.465093335, 3144002.7776916386, 3143978.2454516813, 3143943.211881023, 3143943.1509722993, 3143943.0461661234, 3143943.0461661234, 3143943.0461661234]




.. GENERATED FROM PYTHON SOURCE LINES 130-132

Let's compare the initially generated random patches in `D_init`
with the atoms in `D_hat` recovered with `dicodile`.

.. GENERATED FROM PYTHON SOURCE LINES 132-135

.. code-block:: default


    display_dictionaries(D_init, D_hat)




.. image:: /auto_examples/images/sphx_glr_plot_text_005.png
    :alt: plot text
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <Figure size 640x480 with 24 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 136-137

Now we will reconstruct the image from `z_hat` and `D_hat`.

.. GENERATED FROM PYTHON SOURCE LINES 137-141

.. code-block:: default


    X_hat = reconstruct(z_hat, D_hat)
    X_hat = np.clip(X_hat, 0, 1)








.. GENERATED FROM PYTHON SOURCE LINES 142-145

Let's plot the reconstructed image `X_hat` together with the
original image `X_original` and the noisy image `X` that was input
to `dicodile`.

.. GENERATED FROM PYTHON SOURCE LINES 145-160

.. code-block:: default


    f, (ax1, ax2, ax3) = plt.subplots(3, 1, figsize=[6.4, 8])

    ax1.imshow(X_original[190:490, 250:750], cmap='gray')
    ax1.set_title('Original image')
    ax1.axis('off')

    ax2.imshow(X[0][190:490, 250:750], cmap='gray')
    ax2.set_title('Noisy image')
    ax2.axis('off')

    ax3.imshow(X_hat[0][190:490, 250:750], cmap='gray')
    ax3.set_title('Recovered image')
    ax3.axis('off')
    plt.tight_layout()



.. image:: /auto_examples/images/sphx_glr_plot_text_006.png
    :alt: Original image, Noisy image, Recovered image
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 37 minutes  48.131 seconds)


.. _sphx_glr_download_auto_examples_plot_text.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_text.py <plot_text.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_text.ipynb <plot_text.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
