
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_text.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_text.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_text.py:


DiCoDiLe on text images
=======================

This example illustrates pattern recovery on a noisy text image using
DiCoDiLe algorithm.

.. GENERATED FROM PYTHON SOURCE LINES 9-20

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from dicodile import dicodile
    from dicodile.data.images import fetch_letters_pami
    from dicodile.update_d.update_d import tukey_window
    from dicodile.utils.csc import reconstruct
    from dicodile.utils.dictionary import init_dictionary
    from dicodile.utils.viz import display_dictionaries









.. GENERATED FROM PYTHON SOURCE LINES 21-27

We will first load PAMI image generated from a text of **5000**
characters drawn uniformly from the **4** letters **P** **A** **M**
**I** and 2 whitespaces and assign it to `X`.

We will also load the images of the four characters used to generate
`X` and assign it to variable `D`.

.. GENERATED FROM PYTHON SOURCE LINES 27-31

.. code-block:: default


    X_original, D = fetch_letters_pami()






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Downloading data from https://s3-eu-west-1.amazonaws.com/pfigshare-u-files/26750168/text_4_5000_PAMI.npz (17.8 MB)

    file_sizes:   0%|                                   | 0.00/18.6M [00:00<?, ?B/s]    file_sizes:   0%|                           | 24.6k/18.6M [00:00<01:34, 197kB/s]    file_sizes:   0%|                           | 49.2k/18.6M [00:00<01:33, 198kB/s]    file_sizes:   1%|1                           | 106k/18.6M [00:00<00:58, 319kB/s]    file_sizes:   1%|3                           | 221k/18.6M [00:00<00:32, 558kB/s]    file_sizes:   2%|6                          | 451k/18.6M [00:00<00:17, 1.02MB/s]    file_sizes:   5%|#3                         | 909k/18.6M [00:00<00:09, 1.92MB/s]    file_sizes:  10%|##5                       | 1.83M/18.6M [00:00<00:04, 3.69MB/s]    file_sizes:  20%|#####1                    | 3.66M/18.6M [00:00<00:02, 7.19MB/s]    file_sizes:  39%|##########2               | 7.33M/18.6M [00:01<00:00, 14.0MB/s]    file_sizes:  56%|##############6           | 10.5M/18.6M [00:01<00:00, 17.3MB/s]    file_sizes:  73%|###################       | 13.6M/18.6M [00:01<00:00, 19.6MB/s]    file_sizes:  84%|#####################9    | 15.7M/18.6M [00:01<00:00, 19.2MB/s]    file_sizes:  99%|#########################6| 18.3M/18.6M [00:01<00:00, 20.0MB/s]    file_sizes: 100%|##########################| 18.6M/18.6M [00:01<00:00, 11.5MB/s]
    Successfully downloaded file to /github/home/data/dicodile/images/text/text_4_5000_PAMI.npz




.. GENERATED FROM PYTHON SOURCE LINES 32-36

We will work on the copy `X` of the original image and we need to reshape
image data `X` to fit to the expected signal shape of `dicodile`:

`(n_channels, *sig_support)`

.. GENERATED FROM PYTHON SOURCE LINES 36-41

.. code-block:: default


    X = X_original.copy()
    X = X.reshape(1, *X.shape)
    print(X.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (1, 2321, 2004)




.. GENERATED FROM PYTHON SOURCE LINES 42-45

Reshape `D` to fit to dictionary format:

`(n_atoms, n_channels, *atom_support)`

.. GENERATED FROM PYTHON SOURCE LINES 45-53

.. code-block:: default


    D = D.reshape(4, 1, *D.shape[-2:])

    # We pad `D` in order to have atoms with 0 on the border,
    # compatible with windowed dictionary.
    D = np.pad(D, [(0, 0), (0, 0), (4, 4), (4, 4)])
    print(D.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (4, 1, 37, 33)




.. GENERATED FROM PYTHON SOURCE LINES 54-56

Let's display an extract of the original text image `X_original` and
all the images of characters from `D`.

.. GENERATED FROM PYTHON SOURCE LINES 56-63

.. code-block:: default


    zoom_x = X_original[190:490, 250:750]
    plt.axis('off')
    plt.imshow(zoom_x, cmap='gray')

    display_dictionaries(D)




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_text_001.png
          :alt: plot text
          :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/images/sphx_glr_plot_text_002.png
          :alt: plot text
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <Figure size 640x480 with 4 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 64-66

We add some Gaussian white noise with standard deviation `std` 3 times
larger than `X.std` to `X`.

.. GENERATED FROM PYTHON SOURCE LINES 66-72

.. code-block:: default


    std = 3
    rng = np.random.default_rng(None)

    X += std * X.std() * rng.standard_normal(X.shape)








.. GENERATED FROM PYTHON SOURCE LINES 73-75

We will create a random dictionary of **K = 10** patches from the
noisy image.

.. GENERATED FROM PYTHON SOURCE LINES 75-91

.. code-block:: default


    # set number of patches
    n_atoms = 10
    # set individual atom (patch) size
    atom_support = np.array(D.shape[-2:])

    D_init = init_dictionary(X, n_atoms=n_atoms, atom_support=atom_support,
                             random_state=60)

    # window the dictionary, this helps make sure that the border values are 0
    atom_support = D_init.shape[-2:]
    tw = tukey_window(atom_support)[None, None]
    D_init *= tw

    print(D_init.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (10, 1, 37, 33)




.. GENERATED FROM PYTHON SOURCE LINES 92-94

Let's display an extract of noisy `X` and random dictionary `D_init`
generated from `X`.

.. GENERATED FROM PYTHON SOURCE LINES 94-101

.. code-block:: default


    zoom_x = X[0][190:490, 250:750]
    plt.axis('off')
    plt.imshow(zoom_x, cmap='gray')

    display_dictionaries(D_init)




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/images/sphx_glr_plot_text_003.png
          :alt: plot text
          :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/images/sphx_glr_plot_text_004.png
          :alt: plot text
          :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <Figure size 640x480 with 12 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 102-103

Set model parameters.

.. GENERATED FROM PYTHON SOURCE LINES 103-119

.. code-block:: default


    # regularization parameter
    reg = .2
    # maximum number of iterations
    n_iter = 100
    # when True, makes sure that the borders of the atoms are 0
    window = True
    # when True, requires all activations Z to be positive
    z_positive = True
    # number of workers to be used for computations
    n_workers = 10
    # number of jobs per row
    w_world = 'auto'
    # tolerance for minimal update size
    tol = 1e-3








.. GENERATED FROM PYTHON SOURCE LINES 120-121

Fit the dictionary with `dicodile`.

.. GENERATED FROM PYTHON SOURCE LINES 121-129

.. code-block:: default

    D_hat, z_hat, pobj, times = dicodile(X, D_init, reg=reg, n_iter=n_iter,
                                         window=window, z_positive=z_positive,
                                         n_workers=n_workers,
                                         dicod_kwargs={"max_iter": 10000},
                                         w_world=w_world, tol=tol, verbose=6)

    print("[DICOD] final cost : {}".format(pobj))





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [DEBUG:DICODILE] Lambda_max = 23.499536403689394
    /github/workspace/dicodile/workers/reusable_workers.py:46: UserWarning: You should not require different size
      warnings.warn("You should not require different size")
    Started 10 workers in 6.03s
    [INFO:DICODILE] - CD iterations 0 / 100 (0s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 8.396s (7.092s) with 34644 iterations (7356 updates).
    [DEBUG:DICODILE] Objective (z) : 3.331e+06 (13s)
    [PROGRESS:Update D] 3s -   1.00% iterations (1.321e+00)    [PROGRESS:Update D] 8s -   2.00% iterations (2.177e-03)    [PROGRESS:Update D] 9s -   3.00% iterations (1.086e-03)    [PROGRESS:Update D] 10s -   4.00% iterations (1.086e-03)    [PROGRESS:Update D] 11s -   5.00% iterations (1.086e-03)    [PROGRESS:Update D] 12s -   6.00% iterations (1.086e-03)    [PROGRESS:Update D] 13s -   7.00% iterations (1.086e-03)    [PROGRESS:Update D] 13s -   8.00% iterations (1.086e-03)    [PROGRESS:Update D] 14s -   9.00% iterations (1.086e-03)    [PROGRESS:Update D] 15s -  10.00% iterations (1.086e-03)    [PROGRESS:Update D] 16s -  11.00% iterations (1.086e-03)    [PROGRESS:Update D] 17s -  12.00% iterations (1.086e-03)    [PROGRESS:Update D] 18s -  13.00% iterations (1.086e-03)    [PROGRESS:Update D] 19s -  14.00% iterations (1.086e-03)    [PROGRESS:Update D] 20s -  15.00% iterations (1.086e-03)    [PROGRESS:Update D] 21s -  16.00% iterations (1.086e-03)    [PROGRESS:Update D] 21s -  17.00% iterations (1.086e-03)    [PROGRESS:Update D] 22s -  18.00% iterations (1.086e-03)    [PROGRESS:Update D] 23s -  19.00% iterations (1.086e-03)    [PROGRESS:Update D] 24s -  20.00% iterations (1.086e-03)    [PROGRESS:Update D] 25s -  21.00% iterations (1.086e-03)    [PROGRESS:Update D] 26s -  22.00% iterations (1.086e-03)    [PROGRESS:Update D] 27s -  23.00% iterations (1.086e-03)    [PROGRESS:Update D] 27s -  24.00% iterations (1.086e-03)    [PROGRESS:Update D] 28s -  25.00% iterations (1.086e-03)    [PROGRESS:Update D] 29s -  26.00% iterations (1.086e-03)    [PROGRESS:Update D] 30s -  27.00% iterations (1.086e-03)    [PROGRESS:Update D] 31s -  28.00% iterations (1.086e-03)    [PROGRESS:Update D] 32s -  29.00% iterations (1.086e-03)    [PROGRESS:Update D] 33s -  30.00% iterations (1.086e-03)    [PROGRESS:Update D] 33s -  31.00% iterations (1.086e-03)    [PROGRESS:Update D] 35s -  32.00% iterations (5.432e-04)    [INFO:Update D]: 33 iterations
    [DEBUG:DICODILE] Objective (d) : 3.308e+06  (51s)
    [INFO:DICODILE] - CD iterations 1 / 100 (73s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 84.276s (71.331s) with 99990 iterations (92400 updates).
    [DEBUG:DICODILE] Objective (z) : 3.232e+06 (93s)
    [PROGRESS:Update D] 5s -   1.00% iterations (4.127e-02)    [PROGRESS:Update D] 8s -   2.00% iterations (2.181e-03)    [PROGRESS:Update D] 11s -   3.00% iterations (1.151e-04)    [PROGRESS:Update D] 12s -   4.00% iterations (5.756e-05)    [PROGRESS:Update D] 13s -   5.00% iterations (5.756e-05)    [PROGRESS:Update D] 14s -   6.00% iterations (5.756e-05)    [PROGRESS:Update D] 15s -   7.00% iterations (5.756e-05)    [PROGRESS:Update D] 15s -   8.00% iterations (5.756e-05)    [PROGRESS:Update D] 16s -   9.00% iterations (5.756e-05)    [PROGRESS:Update D] 17s -  10.00% iterations (5.756e-05)    [PROGRESS:Update D] 18s -  11.00% iterations (5.756e-05)    [PROGRESS:Update D] 19s -  12.00% iterations (5.756e-05)    [PROGRESS:Update D] 20s -  13.00% iterations (5.756e-05)    [PROGRESS:Update D] 21s -  14.00% iterations (5.756e-05)    [PROGRESS:Update D] 21s -  15.00% iterations (5.756e-05)    [PROGRESS:Update D] 23s -  16.00% iterations (2.878e-05)    [PROGRESS:Update D] 24s -  17.00% iterations (2.878e-05)    [PROGRESS:Update D] 25s -  18.00% iterations (1.439e-05)    [PROGRESS:Update D] 26s -  19.00% iterations (1.439e-05)    [PROGRESS:Update D] 27s -  20.00% iterations (1.439e-05)    [PROGRESS:Update D] 27s -  21.00% iterations (1.439e-05)    [PROGRESS:Update D] 28s -  22.00% iterations (1.439e-05)    [PROGRESS:Update D] 29s -  23.00% iterations (1.439e-05)    [PROGRESS:Update D] 30s -  24.00% iterations (1.439e-05)    [PROGRESS:Update D] 31s -  25.00% iterations (1.439e-05)    [PROGRESS:Update D] 32s -  26.00% iterations (1.439e-05)    [PROGRESS:Update D] 32s -  27.00% iterations (1.439e-05)    [PROGRESS:Update D] 33s -  28.00% iterations (1.439e-05)    [PROGRESS:Update D] 34s -  29.00% iterations (1.439e-05)    [PROGRESS:Update D] 35s -  30.00% iterations (1.439e-05)    [PROGRESS:Update D] 36s -  31.00% iterations (1.439e-05)    [PROGRESS:Update D] 37s -  32.00% iterations (1.439e-05)    [PROGRESS:Update D] 38s -  33.00% iterations (1.439e-05)    [INFO:Update D]: 34 iterations
    [DEBUG:DICODILE] Objective (d) : 3.223e+06  (55s)
    [INFO:DICODILE] - CD iterations 2 / 100 (229s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 83.840s (70.461s) with 99990 iterations (90913 updates).
    [DEBUG:DICODILE] Objective (z) : 3.206e+06 (95s)
    [PROGRESS:Update D] 6s -   1.00% iterations (4.127e-02)    [PROGRESS:Update D] 8s -   2.00% iterations (4.361e-03)    [PROGRESS:Update D] 10s -   3.00% iterations (2.304e-04)    [PROGRESS:Update D] 12s -   4.00% iterations (4.866e-05)    [PROGRESS:Update D] 13s -   5.00% iterations (4.866e-05)    [PROGRESS:Update D] 14s -   6.00% iterations (4.866e-05)    [PROGRESS:Update D] 15s -   7.00% iterations (4.866e-05)    [PROGRESS:Update D] 16s -   8.00% iterations (4.866e-05)    [PROGRESS:Update D] 17s -   9.00% iterations (4.866e-05)    [PROGRESS:Update D] 17s -  10.00% iterations (4.866e-05)    [PROGRESS:Update D] 18s -  11.00% iterations (4.866e-05)    [PROGRESS:Update D] 19s -  12.00% iterations (4.866e-05)    [PROGRESS:Update D] 20s -  13.00% iterations (4.866e-05)    [PROGRESS:Update D] 21s -  14.00% iterations (4.866e-05)    [PROGRESS:Update D] 22s -  15.00% iterations (2.433e-05)    [PROGRESS:Update D] 23s -  16.00% iterations (2.433e-05)    [INFO:Update D]: 17 iterations
    [DEBUG:DICODILE] Objective (d) : 3.198e+06  (40s)
    [INFO:DICODILE] - CD iterations 3 / 100 (373s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 83.496s (70.235s) with 99990 iterations (89966 updates).
    [DEBUG:DICODILE] Objective (z) : 3.189e+06 (95s)
    [PROGRESS:Update D] 8s -   1.00% iterations (1.290e-03)    [PROGRESS:Update D] 10s -   2.00% iterations (6.804e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (3.401e-05)    [PROGRESS:Update D] 12s -   4.00% iterations (3.401e-05)    [PROGRESS:Update D] 13s -   5.00% iterations (3.401e-05)    [PROGRESS:Update D] 14s -   6.00% iterations (3.401e-05)    [PROGRESS:Update D] 15s -   7.00% iterations (3.401e-05)    [PROGRESS:Update D] 16s -   8.00% iterations (3.401e-05)    [PROGRESS:Update D] 17s -   9.00% iterations (1.700e-05)    [PROGRESS:Update D] 18s -  10.00% iterations (1.700e-05)    [INFO:Update D]: 11 iterations
    [DEBUG:DICODILE] Objective (d) : 3.181e+06  (35s)
    [INFO:DICODILE] - CD iterations 4 / 100 (511s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 82.336s (68.908s) with 99990 iterations (88185 updates).
    [DEBUG:DICODILE] Objective (z) : 3.174e+06 (94s)
    [PROGRESS:Update D] 7s -   1.00% iterations (5.159e-03)    [PROGRESS:Update D] 10s -   2.00% iterations (6.795e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (3.370e-05)    [PROGRESS:Update D] 12s -   4.00% iterations (3.370e-05)    [PROGRESS:Update D] 13s -   5.00% iterations (3.370e-05)    [PROGRESS:Update D] 14s -   6.00% iterations (3.370e-05)    [PROGRESS:Update D] 15s -   7.00% iterations (1.684e-05)    [PROGRESS:Update D] 16s -   8.00% iterations (1.684e-05)    [PROGRESS:Update D] 17s -   9.00% iterations (1.684e-05)    [PROGRESS:Update D] 18s -  10.00% iterations (1.684e-05)    [PROGRESS:Update D] 19s -  11.00% iterations (1.684e-05)    [PROGRESS:Update D] 20s -  12.00% iterations (1.684e-05)    [INFO:Update D]: 13 iterations
    [DEBUG:DICODILE] Objective (d) : 3.168e+06  (37s)
    [INFO:DICODILE] - CD iterations 5 / 100 (650s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 79.172s (66.004s) with 99990 iterations (84104 updates).
    [DEBUG:DICODILE] Objective (z) : 3.162e+06 (90s)
    [PROGRESS:Update D] 9s -   1.00% iterations (3.225e-04)    [PROGRESS:Update D] 11s -   2.00% iterations (6.766e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (3.357e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (3.357e-05)    [PROGRESS:Update D] 14s -   5.00% iterations (3.357e-05)    [PROGRESS:Update D] 15s -   6.00% iterations (3.357e-05)    [PROGRESS:Update D] 16s -   7.00% iterations (1.677e-05)    [PROGRESS:Update D] 17s -   8.00% iterations (1.677e-05)    [PROGRESS:Update D] 18s -   9.00% iterations (1.677e-05)    [PROGRESS:Update D] 18s -  10.00% iterations (1.677e-05)    [PROGRESS:Update D] 19s -  11.00% iterations (1.677e-05)    [PROGRESS:Update D] 20s -  12.00% iterations (1.677e-05)    [PROGRESS:Update D] 24s -  13.00% iterations (1.108e-07)    [INFO:Update D]: 14 iterations
    [DEBUG:DICODILE] Objective (d) : 3.157e+06  (38s)
    [INFO:DICODILE] - CD iterations 6 / 100 (788s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 76.368s (65.191s) with 99990 iterations (79834 updates).
    [DEBUG:DICODILE] Objective (z) : 3.154e+06 (87s)
    [PROGRESS:Update D] 8s -   1.00% iterations (3.224e-04)    [PROGRESS:Update D] 10s -   2.00% iterations (3.391e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (1.694e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (1.694e-05)    [PROGRESS:Update D] 13s -   5.00% iterations (1.694e-05)    [PROGRESS:Update D] 14s -   6.00% iterations (1.694e-05)    [PROGRESS:Update D] 15s -   7.00% iterations (1.694e-05)    [PROGRESS:Update D] 17s -   8.00% iterations (8.472e-06)    [INFO:Update D]: 9 iterations
    [DEBUG:DICODILE] Objective (d) : 3.151e+06  (33s)
    [INFO:DICODILE] - CD iterations 7 / 100 (916s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 70.580s (58.913s) with 99990 iterations (73021 updates).
    [DEBUG:DICODILE] Objective (z) : 3.149e+06 (81s)
    [PROGRESS:Update D] 9s -   1.00% iterations (3.224e-04)    [PROGRESS:Update D] 11s -   2.00% iterations (3.402e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (1.701e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (1.701e-05)    [PROGRESS:Update D] 14s -   5.00% iterations (1.701e-05)    [PROGRESS:Update D] 15s -   6.00% iterations (1.701e-05)    [PROGRESS:Update D] 17s -   7.00% iterations (1.797e-06)    [INFO:Update D]: 8 iterations
    [DEBUG:DICODILE] Objective (d) : 3.149e+06  (32s)
    [INFO:DICODILE] - CD iterations 8 / 100 (1038s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 64.559s (53.849s) with 99990 iterations (64341 updates).
    [DEBUG:DICODILE] Objective (z) : 3.148e+06 (75s)
    [PROGRESS:Update D] 9s -   1.00% iterations (3.225e-04)    [PROGRESS:Update D] 11s -   2.00% iterations (3.406e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (1.703e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (1.703e-05)    [PROGRESS:Update D] 14s -   5.00% iterations (8.513e-06)    [INFO:Update D]: 6 iterations
    [DEBUG:DICODILE] Objective (d) : 3.148e+06  (30s)
    [INFO:DICODILE] - CD iterations 9 / 100 (1152s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 60.020s (49.935s) with 99990 iterations (59709 updates).
    [DEBUG:DICODILE] Objective (z) : 3.147e+06 (70s)
    [PROGRESS:Update D] 8s -   1.00% iterations (3.225e-04)    [PROGRESS:Update D] 10s -   2.00% iterations (6.812e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (1.438e-05)    [PROGRESS:Update D] 12s -   4.00% iterations (1.438e-05)    [PROGRESS:Update D] 13s -   5.00% iterations (1.438e-05)    [PROGRESS:Update D] 14s -   6.00% iterations (1.438e-05)    [INFO:Update D]: 7 iterations
    [DEBUG:DICODILE] Objective (d) : 3.147e+06  (30s)
    [INFO:DICODILE] - CD iterations 10 / 100 (1261s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 58.888s (49.282s) with 99990 iterations (58410 updates).
    [DEBUG:DICODILE] Objective (z) : 3.147e+06 (69s)
    [PROGRESS:Update D] 8s -   1.00% iterations (3.225e-04)    [PROGRESS:Update D] 10s -   2.00% iterations (6.812e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (1.438e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (1.438e-05)    [PROGRESS:Update D] 13s -   5.00% iterations (1.438e-05)    [PROGRESS:Update D] 14s -   6.00% iterations (1.438e-05)    [INFO:Update D]: 7 iterations
    [DEBUG:DICODILE] Objective (d) : 3.147e+06  (31s)
    [INFO:DICODILE] - CD iterations 11 / 100 (1369s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 57.392s (47.685s) with 99990 iterations (56792 updates).
    [DEBUG:DICODILE] Objective (z) : 3.146e+06 (67s)
    [PROGRESS:Update D] 8s -   1.00% iterations (3.225e-04)    [PROGRESS:Update D] 10s -   2.00% iterations (6.812e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (1.439e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (1.439e-05)    [PROGRESS:Update D] 14s -   5.00% iterations (1.439e-05)    [PROGRESS:Update D] 14s -   6.00% iterations (1.439e-05)    [INFO:Update D]: 7 iterations
    [DEBUG:DICODILE] Objective (d) : 3.146e+06  (31s)
    [INFO:DICODILE] - CD iterations 12 / 100 (1476s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 54.640s (45.257s) with 99990 iterations (53506 updates).
    [DEBUG:DICODILE] Objective (z) : 3.146e+06 (65s)
    [PROGRESS:Update D] 9s -   1.00% iterations (1.612e-04)    [PROGRESS:Update D] 10s -   2.00% iterations (8.061e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (1.702e-05)    [PROGRESS:Update D] 12s -   4.00% iterations (1.702e-05)    [PROGRESS:Update D] 14s -   5.00% iterations (8.511e-06)    [INFO:Update D]: 6 iterations
    [DEBUG:DICODILE] Objective (d) : 3.145e+06  (29s)
    [INFO:DICODILE] - CD iterations 13 / 100 (1578s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 49.216s (41.501s) with 99990 iterations (48547 updates).
    [DEBUG:DICODILE] Objective (z) : 3.145e+06 (59s)
    [PROGRESS:Update D] 9s -   1.00% iterations (1.612e-04)    [PROGRESS:Update D] 10s -   2.00% iterations (8.061e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (1.703e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (1.703e-05)    [PROGRESS:Update D] 14s -   5.00% iterations (8.513e-06)    [INFO:Update D]: 6 iterations
    [DEBUG:DICODILE] Objective (d) : 3.145e+06  (30s)
    [INFO:DICODILE] - CD iterations 14 / 100 (1676s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 45.032s (38.489s) with 99990 iterations (43266 updates).
    [DEBUG:DICODILE] Objective (z) : 3.145e+06 (55s)
    [PROGRESS:Update D] 9s -   1.00% iterations (1.612e-04)    [PROGRESS:Update D] 10s -   2.00% iterations (1.612e-04)    [PROGRESS:Update D] 12s -   3.00% iterations (1.703e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (1.703e-05)    [PROGRESS:Update D] 15s -   5.00% iterations (3.599e-06)    [INFO:Update D]: 6 iterations
    [DEBUG:DICODILE] Objective (d) : 3.145e+06  (30s)
    [INFO:DICODILE] - CD iterations 15 / 100 (1771s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 38.393s (32.152s) with 99990 iterations (37386 updates).
    [DEBUG:DICODILE] Objective (z) : 3.144e+06 (48s)
    [PROGRESS:Update D] 9s -   1.00% iterations (1.612e-04)    [PROGRESS:Update D] 10s -   2.00% iterations (1.612e-04)    [PROGRESS:Update D] 12s -   3.00% iterations (1.703e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (1.703e-05)    [PROGRESS:Update D] 14s -   5.00% iterations (8.513e-06)    [INFO:Update D]: 6 iterations
    [DEBUG:DICODILE] Objective (d) : 3.144e+06  (30s)
    [INFO:DICODILE] - CD iterations 16 / 100 (1858s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 35.740s (30.995s) with 95689 iterations (34551 updates).
    [DEBUG:DICODILE] Objective (z) : 3.144e+06 (46s)
    [PROGRESS:Update D] 9s -   1.00% iterations (1.612e-04)    [PROGRESS:Update D] 10s -   2.00% iterations (1.612e-04)    [PROGRESS:Update D] 12s -   3.00% iterations (1.703e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (1.703e-05)    [INFO:Update D]: 5 iterations
    [DEBUG:DICODILE] Objective (d) : 3.144e+06  (29s)
    [INFO:DICODILE] - CD iterations 17 / 100 (1942s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 29.332s (25.422s) with 91312 iterations (28109 updates).
    [DEBUG:DICODILE] Objective (z) : 3.144e+06 (39s)
    [PROGRESS:Update D] 9s -   1.00% iterations (8.061e-05)    [PROGRESS:Update D] 10s -   2.00% iterations (8.061e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (1.703e-05)    [PROGRESS:Update D] 13s -   4.00% iterations (1.703e-05)    [PROGRESS:Update D] 15s -   5.00% iterations (3.599e-06)    [INFO:Update D]: 6 iterations
    [DEBUG:DICODILE] Objective (d) : 3.144e+06  (30s)
    [INFO:DICODILE] - CD iterations 18 / 100 (2020s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 26.664s (22.808s) with 90002 iterations (24885 updates).
    [DEBUG:DICODILE] Objective (z) : 3.144e+06 (37s)
    [PROGRESS:Update D] 9s -   1.00% iterations (8.061e-05)    [PROGRESS:Update D] 10s -   2.00% iterations (8.061e-05)    [PROGRESS:Update D] 12s -   3.00% iterations (8.517e-06)    [INFO:Update D]: 4 iterations
    [DEBUG:DICODILE] Objective (d) : 3.144e+06  (28s)
    [INFO:DICODILE] - CD iterations 19 / 100 (2093s)
    [DEBUG:DICODILE] lambda = 4.700e+00
    [INFO:DICOD-10] converged in 21.608s (17.695s) with 87930 iterations (20647 updates).
    [DEBUG:DICODILE] Objective (z) : 3.144e+06 (32s)
    [PROGRESS:Update D] 10s -   1.00% iterations (8.061e-05)    [PROGRESS:Update D] 11s -   2.00% iterations (8.061e-05)    [PROGRESS:Update D] 14s -   3.00% iterations (2.129e-06)    [INFO:Update D]: 4 iterations
    [DEBUG:DICODILE] Objective (d) : 3.144e+06  (29s)
    [INFO:DICODILE] Converged after 20 iteration, (dz, du) = 8.391e-06, 6.595e-06
    [INFO:DICOD-10] converged in 17.140s (13.923s) with 71596 iterations (16188 updates).
    [INFO:DICODILE] Finished in 1990s
    [DICOD] final cost : [3335667.5128762764, 3330998.9808312296, 3308401.9662462715, 3232230.833515741, 3222626.012631284, 3205865.203427093, 3198061.6872760584, 3188525.2859270573, 3180849.8771375557, 3173855.3926055357, 3168055.8492081435, 3162017.917866554, 3157199.934439655, 3153679.5401397785, 3151028.227298092, 3149432.676040367, 3148600.0133274198, 3148060.6788267004, 3147790.390368065, 3147387.5191149013, 3147187.790927359, 3146766.8374229404, 3146544.170557921, 3146111.6773000075, 3145883.210565139, 3145513.3101610923, 3145335.8946259134, 3145077.19137098, 3144940.607727655, 3144749.8478152566, 3144639.421621472, 3144495.6424694536, 3144413.304088479, 3144305.5604021866, 3144244.3092317414, 3144171.550204325, 3144134.0519884815, 3144090.4608202474, 3144063.422461073, 3144037.0413648533, 3144016.3071327326, 3143998.444543333]




.. GENERATED FROM PYTHON SOURCE LINES 130-132

Let's compare the initially generated random patches in `D_init`
with the atoms in `D_hat` recovered with `dicodile`.

.. GENERATED FROM PYTHON SOURCE LINES 132-135

.. code-block:: default


    display_dictionaries(D_init, D_hat)




.. image:: /auto_examples/images/sphx_glr_plot_text_005.png
    :alt: plot text
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <Figure size 640x480 with 24 Axes>



.. GENERATED FROM PYTHON SOURCE LINES 136-137

Now we will reconstruct the image from `z_hat` and `D_hat`.

.. GENERATED FROM PYTHON SOURCE LINES 137-141

.. code-block:: default


    X_hat = reconstruct(z_hat, D_hat)
    X_hat = np.clip(X_hat, 0, 1)








.. GENERATED FROM PYTHON SOURCE LINES 142-145

Let's plot the reconstructed image `X_hat` together with the
original image `X_original` and the noisy image `X` that was input
to `dicodile`.

.. GENERATED FROM PYTHON SOURCE LINES 145-160

.. code-block:: default


    f, (ax1, ax2, ax3) = plt.subplots(3, 1, figsize=[6.4, 8])

    ax1.imshow(X_original[190:490, 250:750], cmap='gray')
    ax1.set_title('Original image')
    ax1.axis('off')

    ax2.imshow(X[0][190:490, 250:750], cmap='gray')
    ax2.set_title('Noisy image')
    ax2.axis('off')

    ax3.imshow(X_hat[0][190:490, 250:750], cmap='gray')
    ax3.set_title('Recovered image')
    ax3.axis('off')
    plt.tight_layout()



.. image:: /auto_examples/images/sphx_glr_plot_text_006.png
    :alt: Original image, Noisy image, Recovered image
    :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 37 minutes  47.932 seconds)


.. _sphx_glr_download_auto_examples_plot_text.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_text.py <plot_text.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_text.ipynb <plot_text.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
